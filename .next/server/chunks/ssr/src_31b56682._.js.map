{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/page-header.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport { cn } from '@/lib/utils';\n\ntype PageHeaderProps = {\n  title: string;\n  description?: string;\n  children?: ReactNode;\n  className?: string;\n};\n\nexport function PageHeader({ title, description, children, className }: PageHeaderProps) {\n  return (\n    <div className={cn(\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-8\", className)}>\n      <div className=\"grid gap-1\">\n        <h1 className=\"font-headline text-3xl font-bold md:text-4xl text-primary\">{title}</h1>\n        {description && <p className=\"text-lg text-muted-foreground\">{description}</p>}\n      </div>\n      <div className='flex-shrink-0'>{children}</div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AASO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAmB;IACrF,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2EAA2E;;0BAC5F,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA6D;;;;;;oBAC1E,6BAAe,8OAAC;wBAAE,WAAU;kCAAiC;;;;;;;;;;;;0BAEhE,8OAAC;gBAAI,WAAU;0BAAiB;;;;;;;;;;;;AAGtC","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight md:text-2xl\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 656, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/languageActions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { generateLanguageTopics } from '@/ai/flows/generate-language-topics';\nimport { generateQuickQuestions } from '@/ai/flows/generate-quick-questions';\nimport { generateLessonsForTopic } from '@/ai/flows/generate-lessons-for-topic';\nimport { \n    addLanguageSummary, \n    addLanguageCurriculum,\n    deleteLanguageSummary,\n    deleteLanguageCurriculum,\n    addTopic,\n    updateTopic,\n    deleteTopic,\n    addLesson,\n    updateLesson,\n    deleteLesson,\n    addQuickQuestions,\n} from '@/services/languageService';\nimport type { LanguageSummary, LanguageCurriculum, Lesson, Topic } from '@/lib/mock-data';\n\nconst languageSchema = z.object({\n    name: z.string().min(1, \"Name is required.\"),\n    icon: z.string().url(\"Must be a valid URL.\"),\n    difficulty: z.enum(['Beginner', 'Intermediate', 'Advanced']),\n    topicCount: z.coerce.number().min(10).max(20),\n    lessonCount: z.coerce.number().min(10).max(100),\n    quickQuestionsCount: z.coerce.number().min(10).max(100),\n});\n\nexport async function addLanguageAction(formData: FormData) {\n    const validatedFields = languageSchema.safeParse({\n        name: formData.get('name'),\n        icon: formData.get('icon'),\n        difficulty: formData.get('difficulty'),\n        topicCount: formData.get('topicCount'),\n        lessonCount: formData.get('lessonCount'),\n        quickQuestionsCount: formData.get('quickQuestionsCount'),\n    });\n\n    if (!validatedFields.success) {\n        const fieldErrors = validatedFields.error.flatten().fieldErrors;\n        const firstError = Object.values(fieldErrors)[0]?.[0] || \"Invalid input. Please check the form.\";\n        return {\n            error: firstError,\n        };\n    }\n\n    const { name, icon, difficulty, topicCount, lessonCount, quickQuestionsCount } = validatedFields.data;\n    const languageId = name.toLowerCase().replace(/\\s/g, '-').replace(/[^a-z0-9-]/g, '');\n\n    try {\n        const [topicResults, quickQuestionResults] = await Promise.all([\n            generateLanguageTopics({ languageName: name, topicCount }),\n            generateQuickQuestions({ languageName: name, count: quickQuestionsCount })\n        ]);\n\n        if (!topicResults || !topicResults.topics) {\n            throw new Error(\"AI topic generation failed.\");\n        }\n\n        if (!quickQuestionResults || !quickQuestionResults.questions) {\n            throw new Error(\"AI quick question generation failed.\");\n        }\n        \n        const topicsWithLessons = await Promise.all(\n            topicResults.topics.map(async (topic, topicIndex) => {\n                const lessonResults = await generateLessonsForTopic({\n                    languageName: name,\n                    topicTitle: topic.title,\n                    lessonCount: lessonCount,\n                });\n\n                if (!lessonResults || !lessonResults.lessons) {\n                    throw new Error(`AI lesson generation failed for topic: \"${topic.title}\".`);\n                }\n\n                const lessons: Lesson[] = lessonResults.lessons.map((l, lessonIndex) => ({\n                    id: `l-${languageId}-${topicIndex}-${lessonIndex}`,\n                    title: l.title,\n                    difficulty: l.difficulty,\n                    content: l.content,\n                    codeSnippet: l.codeSnippet,\n                    attachments: [],\n                }));\n\n                return {\n                    id: `t-${languageId}-${topicIndex}`,\n                    title: topic.title,\n                    lessons: lessons,\n                };\n            })\n        );\n        \n        const totalLessons = topicsWithLessons.reduce((sum, topic) => sum + topic.lessons.length, 0);\n\n        const newLanguageSummary: LanguageSummary = {\n            id: languageId,\n            name,\n            icon,\n            difficulty,\n            topics: topicsWithLessons.length,\n            lessons: totalLessons,\n            popularity: 0,\n            description: `A ${difficulty}-level programming language.`,\n            progress: 0,\n        };\n        \n        const newLanguageCurriculum: LanguageCurriculum = {\n            name: newLanguageSummary.name,\n            topics: topicsWithLessons\n        };\n        \n        await addLanguageSummary(newLanguageSummary);\n        await addLanguageCurriculum(languageId, newLanguageCurriculum);\n        await addQuickQuestions(languageId, quickQuestionResults.questions);\n\n        revalidatePath('/admin/languages');\n        revalidatePath('/languages');\n        revalidatePath('/dashboard');\n        revalidatePath('/ai-assistant');\n        \n        return {\n            success: true,\n            message: `${name} was added with ${topicsWithLessons.length} topics, ${totalLessons} lessons, and ${quickQuestionResults.questions.length} quick questions.`,\n        }\n\n    } catch (error) {\n        console.error(\"Failed to add language:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"AI generation failed.\";\n        return {\n            error: `Could not save the language. ${errorMessage}`,\n        };\n    }\n}\n\nexport async function deleteLanguageAction(langId: string) {\n    if (!langId) {\n        return { error: \"Language ID is required.\" };\n    }\n\n    try {\n        await deleteLanguageSummary(langId);\n        await deleteLanguageCurriculum(langId);\n        revalidatePath('/admin/languages');\n        revalidatePath('/languages');\n        revalidatePath('/dashboard');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Failed to delete language:\", error);\n        return { error: \"An unexpected error occurred.\" };\n    }\n}\n\nconst generateTopicsSchema = z.object({\n    langId: z.string(),\n    languageName: z.string(),\n    topicCount: z.coerce.number().min(10).max(20),\n});\n\nexport async function generateTopicsAction(formData: FormData) {\n    const validatedFields = generateTopicsSchema.safeParse({\n        langId: formData.get('langId'),\n        languageName: formData.get('languageName'),\n        topicCount: formData.get('topicCount'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { langId, languageName, topicCount } = validatedFields.data;\n\n    try {\n        const aiResult = await generateLanguageTopics({ \n            languageName,\n            topicCount,\n        });\n\n        if (!aiResult || !aiResult.topics) {\n            throw new Error(\"AI topic generation failed.\");\n        }\n\n        for (const topic of aiResult.topics) {\n            await addTopic(langId, { title: topic.title });\n        }\n\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath('/admin/languages');\n        revalidatePath('/dashboard');\n        \n        return {\n            success: true,\n            message: `${aiResult.topics.length} topics were generated for ${languageName}.`,\n        }\n\n    } catch (error) {\n        console.error(\"Failed to generate topics:\", error);\n        return {\n            error: \"Could not generate topics for the language.\",\n        };\n    }\n}\n\n// Topic Actions\nconst topicSchema = z.object({\n    id: z.string().optional(),\n    title: z.string().min(1, \"Title is required.\"),\n    langId: z.string(),\n});\nexport async function saveTopicAction(formData: FormData) {\n    const validatedFields = topicSchema.safeParse({\n        id: formData.get('id'),\n        title: formData.get('title'),\n        langId: formData.get('langId'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { id, title, langId } = validatedFields.data;\n\n    try {\n        if (id) {\n            await updateTopic(langId, id, { title });\n        } else {\n            await addTopic(langId, { title });\n        }\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath('/admin/languages');\n        return { success: true, message: `Topic \"${title}\" saved.` };\n    } catch (error) {\n        return { error: \"Failed to save topic.\" };\n    }\n}\n\nexport async function deleteTopicAction(langId: string, topicId: string) {\n    try {\n        await deleteTopic(langId, topicId);\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath('/admin/languages');\n        return { success: true, message: \"Topic deleted.\" };\n    } catch (error) {\n        return { error: \"Failed to delete topic.\" };\n    }\n}\n\n// Lesson Actions\nconst lessonSchema = z.object({\n    id: z.string().optional(),\n    title: z.string().min(1, \"Title is required.\"),\n    difficulty: z.enum(['Beginner', 'Intermediate', 'Advanced']),\n    langId: z.string(),\n    topicId: z.string(),\n    content: z.string().optional(),\n    codeSnippet: z.string().optional(),\n});\nexport async function saveLessonAction(formData: FormData) {\n    const validatedFields = lessonSchema.safeParse({\n        id: formData.get('id'),\n        title: formData.get('title'),\n        difficulty: formData.get('difficulty'),\n        langId: formData.get('langId'),\n        topicId: formData.get('topicId'),\n        content: formData.get('content'),\n        codeSnippet: formData.get('codeSnippet'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { id, langId, topicId, ...lessonData } = validatedFields.data;\n\n    try {\n        if (id) {\n            await updateLesson(langId, topicId, id, lessonData);\n        } else {\n            await addLesson(langId, topicId, lessonData);\n        }\n        revalidatePath(`/admin/languages/${langId}`);\n        return { success: true, message: `Lesson \"${lessonData.title}\" saved.` };\n    } catch (error) {\n        return { error: \"Failed to save lesson.\" };\n    }\n}\n\nexport async function deleteLessonAction(langId: string, topicId: string, lessonId: string) {\n    try {\n        await deleteLesson(langId, topicId, lessonId);\n        revalidatePath(`/admin/languages/${langId}`);\n        return { success: true, message: \"Lesson deleted.\" };\n    } catch (error) {\n        return { error: \"Failed to delete lesson.\" };\n    }\n}\n\n// Quick Questions Actions\nconst quickQuestionsSchema = z.object({\n  langId: z.string(),\n  questions: z.string(),\n});\nexport async function saveQuickQuestionsAction(formData: FormData) {\n    const validatedFields = quickQuestionsSchema.safeParse({\n        langId: formData.get('langId'),\n        questions: formData.get('questions'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { langId, questions } = validatedFields.data;\n    const questionsArray = questions.split('\\n').filter(q => q.trim() !== '');\n\n    try {\n        await addQuickQuestions(langId, questionsArray);\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath(`/ai-assistant`);\n        return { success: true, message: 'Quick questions have been updated.' };\n    } catch (error) {\n        return { error: \"Failed to save quick questions.\" };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAgCsB,oBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/languageActions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { generateLanguageTopics } from '@/ai/flows/generate-language-topics';\nimport { generateQuickQuestions } from '@/ai/flows/generate-quick-questions';\nimport { generateLessonsForTopic } from '@/ai/flows/generate-lessons-for-topic';\nimport { \n    addLanguageSummary, \n    addLanguageCurriculum,\n    deleteLanguageSummary,\n    deleteLanguageCurriculum,\n    addTopic,\n    updateTopic,\n    deleteTopic,\n    addLesson,\n    updateLesson,\n    deleteLesson,\n    addQuickQuestions,\n} from '@/services/languageService';\nimport type { LanguageSummary, LanguageCurriculum, Lesson, Topic } from '@/lib/mock-data';\n\nconst languageSchema = z.object({\n    name: z.string().min(1, \"Name is required.\"),\n    icon: z.string().url(\"Must be a valid URL.\"),\n    difficulty: z.enum(['Beginner', 'Intermediate', 'Advanced']),\n    topicCount: z.coerce.number().min(10).max(20),\n    lessonCount: z.coerce.number().min(10).max(100),\n    quickQuestionsCount: z.coerce.number().min(10).max(100),\n});\n\nexport async function addLanguageAction(formData: FormData) {\n    const validatedFields = languageSchema.safeParse({\n        name: formData.get('name'),\n        icon: formData.get('icon'),\n        difficulty: formData.get('difficulty'),\n        topicCount: formData.get('topicCount'),\n        lessonCount: formData.get('lessonCount'),\n        quickQuestionsCount: formData.get('quickQuestionsCount'),\n    });\n\n    if (!validatedFields.success) {\n        const fieldErrors = validatedFields.error.flatten().fieldErrors;\n        const firstError = Object.values(fieldErrors)[0]?.[0] || \"Invalid input. Please check the form.\";\n        return {\n            error: firstError,\n        };\n    }\n\n    const { name, icon, difficulty, topicCount, lessonCount, quickQuestionsCount } = validatedFields.data;\n    const languageId = name.toLowerCase().replace(/\\s/g, '-').replace(/[^a-z0-9-]/g, '');\n\n    try {\n        const [topicResults, quickQuestionResults] = await Promise.all([\n            generateLanguageTopics({ languageName: name, topicCount }),\n            generateQuickQuestions({ languageName: name, count: quickQuestionsCount })\n        ]);\n\n        if (!topicResults || !topicResults.topics) {\n            throw new Error(\"AI topic generation failed.\");\n        }\n\n        if (!quickQuestionResults || !quickQuestionResults.questions) {\n            throw new Error(\"AI quick question generation failed.\");\n        }\n        \n        const topicsWithLessons = await Promise.all(\n            topicResults.topics.map(async (topic, topicIndex) => {\n                const lessonResults = await generateLessonsForTopic({\n                    languageName: name,\n                    topicTitle: topic.title,\n                    lessonCount: lessonCount,\n                });\n\n                if (!lessonResults || !lessonResults.lessons) {\n                    throw new Error(`AI lesson generation failed for topic: \"${topic.title}\".`);\n                }\n\n                const lessons: Lesson[] = lessonResults.lessons.map((l, lessonIndex) => ({\n                    id: `l-${languageId}-${topicIndex}-${lessonIndex}`,\n                    title: l.title,\n                    difficulty: l.difficulty,\n                    content: l.content,\n                    codeSnippet: l.codeSnippet,\n                    attachments: [],\n                }));\n\n                return {\n                    id: `t-${languageId}-${topicIndex}`,\n                    title: topic.title,\n                    lessons: lessons,\n                };\n            })\n        );\n        \n        const totalLessons = topicsWithLessons.reduce((sum, topic) => sum + topic.lessons.length, 0);\n\n        const newLanguageSummary: LanguageSummary = {\n            id: languageId,\n            name,\n            icon,\n            difficulty,\n            topics: topicsWithLessons.length,\n            lessons: totalLessons,\n            popularity: 0,\n            description: `A ${difficulty}-level programming language.`,\n            progress: 0,\n        };\n        \n        const newLanguageCurriculum: LanguageCurriculum = {\n            name: newLanguageSummary.name,\n            topics: topicsWithLessons\n        };\n        \n        await addLanguageSummary(newLanguageSummary);\n        await addLanguageCurriculum(languageId, newLanguageCurriculum);\n        await addQuickQuestions(languageId, quickQuestionResults.questions);\n\n        revalidatePath('/admin/languages');\n        revalidatePath('/languages');\n        revalidatePath('/dashboard');\n        revalidatePath('/ai-assistant');\n        \n        return {\n            success: true,\n            message: `${name} was added with ${topicsWithLessons.length} topics, ${totalLessons} lessons, and ${quickQuestionResults.questions.length} quick questions.`,\n        }\n\n    } catch (error) {\n        console.error(\"Failed to add language:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"AI generation failed.\";\n        return {\n            error: `Could not save the language. ${errorMessage}`,\n        };\n    }\n}\n\nexport async function deleteLanguageAction(langId: string) {\n    if (!langId) {\n        return { error: \"Language ID is required.\" };\n    }\n\n    try {\n        await deleteLanguageSummary(langId);\n        await deleteLanguageCurriculum(langId);\n        revalidatePath('/admin/languages');\n        revalidatePath('/languages');\n        revalidatePath('/dashboard');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Failed to delete language:\", error);\n        return { error: \"An unexpected error occurred.\" };\n    }\n}\n\nconst generateTopicsSchema = z.object({\n    langId: z.string(),\n    languageName: z.string(),\n    topicCount: z.coerce.number().min(10).max(20),\n});\n\nexport async function generateTopicsAction(formData: FormData) {\n    const validatedFields = generateTopicsSchema.safeParse({\n        langId: formData.get('langId'),\n        languageName: formData.get('languageName'),\n        topicCount: formData.get('topicCount'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { langId, languageName, topicCount } = validatedFields.data;\n\n    try {\n        const aiResult = await generateLanguageTopics({ \n            languageName,\n            topicCount,\n        });\n\n        if (!aiResult || !aiResult.topics) {\n            throw new Error(\"AI topic generation failed.\");\n        }\n\n        for (const topic of aiResult.topics) {\n            await addTopic(langId, { title: topic.title });\n        }\n\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath('/admin/languages');\n        revalidatePath('/dashboard');\n        \n        return {\n            success: true,\n            message: `${aiResult.topics.length} topics were generated for ${languageName}.`,\n        }\n\n    } catch (error) {\n        console.error(\"Failed to generate topics:\", error);\n        return {\n            error: \"Could not generate topics for the language.\",\n        };\n    }\n}\n\n// Topic Actions\nconst topicSchema = z.object({\n    id: z.string().optional(),\n    title: z.string().min(1, \"Title is required.\"),\n    langId: z.string(),\n});\nexport async function saveTopicAction(formData: FormData) {\n    const validatedFields = topicSchema.safeParse({\n        id: formData.get('id'),\n        title: formData.get('title'),\n        langId: formData.get('langId'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { id, title, langId } = validatedFields.data;\n\n    try {\n        if (id) {\n            await updateTopic(langId, id, { title });\n        } else {\n            await addTopic(langId, { title });\n        }\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath('/admin/languages');\n        return { success: true, message: `Topic \"${title}\" saved.` };\n    } catch (error) {\n        return { error: \"Failed to save topic.\" };\n    }\n}\n\nexport async function deleteTopicAction(langId: string, topicId: string) {\n    try {\n        await deleteTopic(langId, topicId);\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath('/admin/languages');\n        return { success: true, message: \"Topic deleted.\" };\n    } catch (error) {\n        return { error: \"Failed to delete topic.\" };\n    }\n}\n\n// Lesson Actions\nconst lessonSchema = z.object({\n    id: z.string().optional(),\n    title: z.string().min(1, \"Title is required.\"),\n    difficulty: z.enum(['Beginner', 'Intermediate', 'Advanced']),\n    langId: z.string(),\n    topicId: z.string(),\n    content: z.string().optional(),\n    codeSnippet: z.string().optional(),\n});\nexport async function saveLessonAction(formData: FormData) {\n    const validatedFields = lessonSchema.safeParse({\n        id: formData.get('id'),\n        title: formData.get('title'),\n        difficulty: formData.get('difficulty'),\n        langId: formData.get('langId'),\n        topicId: formData.get('topicId'),\n        content: formData.get('content'),\n        codeSnippet: formData.get('codeSnippet'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { id, langId, topicId, ...lessonData } = validatedFields.data;\n\n    try {\n        if (id) {\n            await updateLesson(langId, topicId, id, lessonData);\n        } else {\n            await addLesson(langId, topicId, lessonData);\n        }\n        revalidatePath(`/admin/languages/${langId}`);\n        return { success: true, message: `Lesson \"${lessonData.title}\" saved.` };\n    } catch (error) {\n        return { error: \"Failed to save lesson.\" };\n    }\n}\n\nexport async function deleteLessonAction(langId: string, topicId: string, lessonId: string) {\n    try {\n        await deleteLesson(langId, topicId, lessonId);\n        revalidatePath(`/admin/languages/${langId}`);\n        return { success: true, message: \"Lesson deleted.\" };\n    } catch (error) {\n        return { error: \"Failed to delete lesson.\" };\n    }\n}\n\n// Quick Questions Actions\nconst quickQuestionsSchema = z.object({\n  langId: z.string(),\n  questions: z.string(),\n});\nexport async function saveQuickQuestionsAction(formData: FormData) {\n    const validatedFields = quickQuestionsSchema.safeParse({\n        langId: formData.get('langId'),\n        questions: formData.get('questions'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { langId, questions } = validatedFields.data;\n    const questionsArray = questions.split('\\n').filter(q => q.trim() !== '');\n\n    try {\n        await addQuickQuestions(langId, questionsArray);\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath(`/ai-assistant`);\n        return { success: true, message: 'Quick questions have been updated.' };\n    } catch (error) {\n        return { error: \"Failed to save quick questions.\" };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA0IsB,uBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/languageService.ts"],"sourcesContent":["\n'use server';\n\nimport { \n    languagesSummaryData, \n    languagesCurriculumData, \n    quickQuestionsData,\n    type LanguageSummary, \n    type LanguageCurriculum,\n    type Topic,\n    type Lesson\n} from \"@/lib/mock-data\";\n\n/**\n * In-memory data store for the application.\n * In a real-world application, these functions would interact with a database.\n */\n\n// ========== Language Summary Services ==========\n\nexport async function getLanguagesSummary(): Promise<LanguageSummary[]> {\n    // Simulate async database call\n    return Promise.resolve(languagesSummaryData);\n}\n\nexport async function addLanguageSummary(summary: LanguageSummary): Promise<void> {\n    languagesSummaryData.push(summary);\n    return Promise.resolve();\n}\n\nexport async function deleteLanguageSummary(langId: string): Promise<void> {\n    const index = languagesSummaryData.findIndex(l => l.id === langId);\n    if (index > -1) {\n        languagesSummaryData.splice(index, 1);\n    }\n    return Promise.resolve();\n}\n\n// ========== Language Curriculum Services ==========\n\nexport async function getLanguageCurriculum(langId: string): Promise<LanguageCurriculum | null> {\n    return Promise.resolve(languagesCurriculumData[langId] || null);\n}\n\nexport async function addLanguageCurriculum(langId: string, curriculum: LanguageCurriculum): Promise<void> {\n    languagesCurriculumData[langId] = curriculum;\n    return Promise.resolve();\n}\n\nexport async function deleteLanguageCurriculum(langId: string): Promise<void> {\n    delete languagesCurriculumData[langId];\n    return Promise.resolve();\n}\n\n// ========== Quick Question Services ==========\n\nexport async function getQuickQuestions(langId: string): Promise<string[] | undefined> {\n    return Promise.resolve(quickQuestionsData[langId]);\n}\n\nexport async function addQuickQuestions(langId: string, questions: string[]): Promise<void> {\n    quickQuestionsData[langId] = questions;\n    return Promise.resolve();\n}\n\n// ========== Topic Services ==========\n\nexport async function addTopic(langId: string, topic: Omit<Topic, 'id' | 'lessons'>): Promise<Topic | null> {\n    const curriculum = languagesCurriculumData[langId];\n    if (curriculum) {\n        const newTopic: Topic = {\n            ...topic,\n            id: `t-${langId}-${Date.now()}`,\n            lessons: [],\n        };\n        curriculum.topics.push(newTopic);\n        \n        const summary = languagesSummaryData.find(s => s.id === langId);\n        if (summary) {\n            summary.topics = curriculum.topics.length;\n        }\n\n        return Promise.resolve(newTopic);\n    }\n    return Promise.resolve(null);\n}\n\nexport async function updateTopic(langId: string, topicId: string, topicData: Partial<Topic>): Promise<Topic | null> {\n    const topic = languagesCurriculumData[langId]?.topics.find(t => t.id === topicId);\n    if (topic) {\n        Object.assign(topic, topicData);\n        return Promise.resolve(topic);\n    }\n    return Promise.resolve(null);\n}\n\nexport async function deleteTopic(langId: string, topicId: string): Promise<void> {\n    const curriculum = languagesCurriculumData[langId];\n    if (curriculum) {\n        const topicIndex = curriculum.topics.findIndex(t => t.id === topicId);\n        if (topicIndex > -1) {\n            curriculum.topics.splice(topicIndex, 1);\n            \n            const summary = languagesSummaryData.find(s => s.id === langId);\n            if (summary) {\n                summary.topics = curriculum.topics.length;\n            }\n        }\n    }\n    return Promise.resolve();\n}\n\n// ========== Lesson Services ==========\n\nexport async function addLesson(langId: string, topicId: string, lessonData: Omit<Lesson, 'id' | 'attachments'>): Promise<Lesson | null> {\n    const topic = languagesCurriculumData[langId]?.topics.find(t => t.id === topicId);\n    if (topic) {\n        const newLesson: Lesson = {\n            ...lessonData,\n            id: `l-${langId}-${topicId}-${Date.now()}`,\n            attachments: [],\n        };\n        topic.lessons.push(newLesson);\n\n        const summary = languagesSummaryData.find(s => s.id === langId);\n        if (summary) {\n            summary.lessons = (summary.lessons || 0) + 1;\n        }\n\n        return Promise.resolve(newLesson);\n    }\n    return Promise.resolve(null);\n}\n\nexport async function updateLesson(langId: string, topicId: string, lessonId: string, lessonData: Partial<Lesson>): Promise<Lesson | null> {\n    const topic = languagesCurriculumData[langId]?.topics.find(t => t.id === topicId);\n    if (topic) {\n        const lesson = topic.lessons.find(l => l.id === lessonId);\n        if (lesson) {\n            Object.assign(lesson, lessonData);\n            return Promise.resolve(lesson);\n        }\n    }\n    return Promise.resolve(null);\n}\n\nexport async function deleteLesson(langId: string, topicId: string, lessonId: string): Promise<void> {\n    const topic = languagesCurriculumData[langId]?.topics.find(t => t.id === topicId);\n    if (topic) {\n        const lessonIndex = topic.lessons.findIndex(l => l.id === lessonId);\n        if (lessonIndex > -1) {\n            topic.lessons.splice(lessonIndex, 1);\n\n            const summary = languagesSummaryData.find(s => s.id === langId);\n            if (summary) {\n                summary.lessons = (summary.lessons || 0) - 1;\n            }\n        }\n    }\n    return Promise.resolve();\n}\n"],"names":[],"mappings":";;;;;;IAoBsB,sBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 919, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/languages/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { PageHeader } from \"@/components/admin/page-header\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter, DialogClose } from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { MoreHorizontal, PlusCircle, Loader2 } from \"lucide-react\";\nimport Image from \"next/image\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { addLanguageAction, deleteLanguageAction } from \"@/actions/languageActions\";\nimport { getLanguagesSummary } from \"@/services/languageService\";\nimport type { LanguageSummary } from \"@/lib/mock-data\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nexport default function LanguagesPage() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [languages, setLanguages] = useState<LanguageSummary[]>([]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchLanguages = async () => {\n      setIsLoading(true);\n      const summary = await getLanguagesSummary();\n      setLanguages(summary);\n      setIsLoading(false);\n    };\n    fetchLanguages();\n  }, []);\n  \n  const handleAddNew = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDelete = async (langId: string, langName: string) => {\n    const result = await deleteLanguageAction(langId);\n    if (result?.error) {\n      toast({ title: \"Error\", description: result.error, variant: \"destructive\" });\n    } else {\n      setLanguages(languages.filter(l => l.id !== langId));\n      toast({ title: \"Language Deleted\", description: `${langName} has been removed.` });\n    }\n  };\n\n  const handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsSaving(true);\n\n    const formData = new FormData(event.currentTarget);\n    const result = await addLanguageAction(formData);\n\n    if (result?.error) {\n        toast({\n            title: \"Error\",\n            description: result.error,\n            variant: \"destructive\",\n        });\n    } else if (result?.success) {\n        toast({ title: \"Language Added\", description: result.message });\n        setIsDialogOpen(false);\n        const summary = await getLanguagesSummary();\n        setLanguages(summary);\n    }\n    \n    setIsSaving(false);\n  };\n  \n  return (\n    <>\n      <PageHeader\n        title=\"Languages & Topics\"\n        description=\"Manage programming languages, topics, and lessons.\"\n      >\n        <Button onClick={handleAddNew}>\n          <PlusCircle className=\"mr-2 h-4 w-4\" />\n          Add New Language\n        </Button>\n      </PageHeader>\n      <Card>\n        <CardHeader>\n          <CardTitle>All Languages</CardTitle>\n          <CardDescription>A list of all available programming languages.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Language</TableHead>\n                <TableHead>Topics</TableHead>\n                <TableHead>Lessons</TableHead>\n                <TableHead>Enrolled Users</TableHead>\n                <TableHead>Difficulty</TableHead>\n                <TableHead>\n                  <span className=\"sr-only\">Actions</span>\n                </TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {isLoading ? (\n                Array.from({ length: 5 }).map((_, i) => (\n                  <TableRow key={i}>\n                    <TableCell><Skeleton className=\"h-8 w-32\" /></TableCell>\n                    <TableCell><Skeleton className=\"h-8 w-12\" /></TableCell>\n                    <TableCell><Skeleton className=\"h-8 w-12\" /></TableCell>\n                    <TableCell><Skeleton className=\"h-8 w-20\" /></TableCell>\n                    <TableCell><Skeleton className=\"h-8 w-24\" /></TableCell>\n                    <TableCell><Skeleton className=\"h-8 w-8\" /></TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                languages.map((lang) => (\n                  <TableRow key={lang.id}>\n                    <TableCell className=\"font-medium\">\n                      <div className=\"flex items-center gap-3\">\n                        <Image src={lang.icon} alt={lang.name} width={32} height={32} className=\"rounded-sm\" data-ai-hint=\"language logo\" />\n                        <span>{lang.name}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell>{lang.topics}</TableCell>\n                    <TableCell>{lang.lessons}</TableCell>\n                    <TableCell>{lang.popularity.toLocaleString()}</TableCell>\n                    <TableCell>\n                      <Badge variant={\n                        lang.difficulty === 'Beginner' ? 'secondary' :\n                        lang.difficulty === 'Intermediate' ? 'outline' : 'default'\n                      }>{lang.difficulty}</Badge>\n                    </TableCell>\n                    <TableCell>\n                      <DropdownMenu>\n                        <DropdownMenuTrigger asChild>\n                          <Button aria-haspopup=\"true\" size=\"icon\" variant=\"ghost\">\n                            <MoreHorizontal className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Toggle menu</span>\n                          </Button>\n                        </DropdownMenuTrigger>\n                        <DropdownMenuContent align=\"end\">\n                          <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                          <DropdownMenuItem onSelect={() => router.push(`/admin/languages/${lang.id}`)}>Manage Topics & Lessons</DropdownMenuItem>\n                          <DropdownMenuItem disabled>Edit (Coming Soon)</DropdownMenuItem>\n                          <DropdownMenuSeparator />\n                          <DropdownMenuItem className=\"text-destructive\" onSelect={() => handleDelete(lang.id, lang.name)}>Delete</DropdownMenuItem>\n                        </DropdownMenuContent>\n                      </DropdownMenu>\n                    </TableCell>\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <form onSubmit={handleFormSubmit}>\n            <DialogHeader>\n              <DialogTitle>Add New Language</DialogTitle>\n              <DialogDescription>\n                Add a new language. Starter topics and lessons will be generated by AI.\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"name\" className=\"text-right\">Name</Label>\n                <Input id=\"name\" name=\"name\" defaultValue=\"\" className=\"col-span-3\" required />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"icon\" className=\"text-right\">Icon URL</Label>\n                <Input id=\"icon\" name=\"icon\" defaultValue=\"https://placehold.co/32x32.png\" className=\"col-span-3\" required />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"difficulty\" className=\"text-right\">Difficulty</Label>\n                <Select name=\"difficulty\" defaultValue=\"Beginner\">\n                  <SelectTrigger className=\"col-span-3\">\n                    <SelectValue placeholder=\"Select difficulty\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Beginner\">Beginner</SelectItem>\n                    <SelectItem value=\"Intermediate\">Intermediate</SelectItem>\n                    <SelectItem value=\"Advanced\">Advanced</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"topic-count\" className=\"text-right\">Topics</Label>\n                <Input\n                  id=\"topic-count\"\n                  name=\"topicCount\"\n                  type=\"number\"\n                  defaultValue={10}\n                  className=\"col-span-3\"\n                  min=\"10\"\n                  max=\"20\"\n                  required\n                />\n              </div>\n               <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"lesson-count\" className=\"text-right\">Lessons / Topic</Label>\n                <Input\n                  id=\"lesson-count\"\n                  name=\"lessonCount\"\n                  type=\"number\"\n                  defaultValue={10}\n                  className=\"col-span-3\"\n                  min=\"10\"\n                  max=\"100\"\n                  required\n                />\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"quick-questions-count\" className=\"text-right\">Quick Questions</Label>\n                <Input\n                  id=\"quick-questions-count\"\n                  name=\"quickQuestionsCount\"\n                  type=\"number\"\n                  defaultValue={10}\n                  className=\"col-span-3\"\n                  min=\"10\"\n                  max=\"100\"\n                  required\n                />\n              </div>\n            </div>\n            <DialogFooter>\n              <DialogClose asChild>\n                  <Button type=\"button\" variant=\"outline\" disabled={isSaving}>Cancel</Button>\n              </DialogClose>\n              <Button type=\"submit\" disabled={isSaving}>\n                  {isSaving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                  {isSaving ? \"Saving...\" : \"Save changes\"}\n              </Button>\n            </DialogFooter>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}