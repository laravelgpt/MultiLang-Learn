{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-language-topics.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI-powered tool to generate starter topics for a new programming language.\n *\n * - generateLanguageTopics - A function that takes a language name and returns a list of topics.\n * - GenerateLanguageTopicsInput - The input type for the generateLanguageTopics function.\n * - GenerateLanguageTopicsOutput - The return type for the generateLanguageTopics function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateLanguageTopicsInputSchema = z.object({\n  languageName: z.string().describe('The name of the programming language.'),\n  topicCount: z.number().optional().describe('The number of topics to generate.'),\n});\nexport type GenerateLanguageTopicsInput = z.infer<typeof GenerateLanguageTopicsInputSchema>;\n\nconst TopicSchema = z.object({\n    title: z.string().describe(\"The title of the topic.\"),\n});\n\nconst GenerateLanguageTopicsOutputSchema = z.object({\n    topics: z.array(TopicSchema).describe(\"An array of introductory topic titles for the language.\"),\n});\nexport type GenerateLanguageTopicsOutput = z.infer<typeof GenerateLanguageTopicsOutputSchema>;\n\nexport async function generateLanguageTopics(input: GenerateLanguageTopicsInput): Promise<GenerateLanguageTopicsOutput> {\n  return generateLanguageTopicsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateLanguageTopicsPrompt',\n  input: {schema: GenerateLanguageTopicsInputSchema},\n  output: {schema: GenerateLanguageTopicsOutputSchema},\n  prompt: `You are an expert curriculum designer for software engineering.\nA user wants to add a new programming language to the platform: \"{{languageName}}\".\n\nYour task is to generate a list of {{#if topicCount}}{{topicCount}}{{else}}5 to 7{{/if}} essential, introductory topic titles for a beginner's curriculum in this language.\nFocus on fundamental concepts that a new learner would need to get started.\n\nFor example, for Python, you might suggest:\n- Introduction to Python\n- Python Basics (Variables, Data Types)\n- Control Flow (If/Else, Loops)\n- Functions and Modules\n- Data Structures (Lists, Dictionaries)\n\nGenerate the topics for \"{{languageName}}\".\n`,\n});\n\nconst generateLanguageTopicsFlow = ai.defineFlow(\n  {\n    name: 'generateLanguageTopicsFlow',\n    inputSchema: GenerateLanguageTopicsInputSchema,\n    outputSchema: GenerateLanguageTopicsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC7C;AAGA,MAAM,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAEA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,QAAQ,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,aAAa,QAAQ,CAAC;AAC1C;AAGO,eAAe,uBAAuB,KAAkC;IAC7E,OAAO,2BAA2B;AACpC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiC;IACjD,QAAQ;QAAC,QAAQ;IAAkC;IACnD,QAAQ,CAAC;;;;;;;;;;;;;;AAcX,CAAC;AACD;AAEA,MAAM,6BAA6B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAlCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-quick-questions.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI-powered tool to generate quick questions for a programming language.\n *\n * - generateQuickQuestions - A function that takes a language name and returns a list of questions.\n * - GenerateQuickQuestionsInput - The input type for the generateQuickQuestions function.\n * - GenerateQuickQuestionsOutput - The return type for the generateQuickQuestions function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateQuickQuestionsInputSchema = z.object({\n  languageName: z.string().describe('The name of the programming language.'),\n  count: z.number().describe('The number of questions to generate.'),\n});\nexport type GenerateQuickQuestionsInput = z.infer<typeof GenerateQuickQuestionsInputSchema>;\n\nconst GenerateQuickQuestionsOutputSchema = z.object({\n  questions: z.array(z.string()).describe(\"An array of common questions about the specified programming language.\"),\n});\nexport type GenerateQuickQuestionsOutput = z.infer<typeof GenerateQuickQuestionsOutputSchema>;\n\nexport async function generateQuickQuestions(input: GenerateQuickQuestionsInput): Promise<GenerateQuickQuestionsOutput> {\n  return generateQuickQuestionsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateQuickQuestionsPrompt',\n  input: {schema: GenerateQuickQuestionsInputSchema},\n  output: {schema: GenerateQuickQuestionsOutputSchema},\n  prompt: `You are an expert programming curriculum designer.\nGenerate exactly {{count}} common, insightful \"quick questions\" a beginner or intermediate learner might ask about the programming language \"{{languageName}}\".\n\nThe questions should be concise, under 15 words, and suitable for buttons in a chat interface. Do not add any introductory text or apologies. Just provide the questions.`,\n});\n\nconst generateQuickQuestionsFlow = ai.defineFlow(\n  {\n    name: 'generateQuickQuestionsFlow',\n    inputSchema: GenerateQuickQuestionsInputSchema,\n    outputSchema: GenerateQuickQuestionsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAGA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,WAAW,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAC1C;AAGO,eAAe,uBAAuB,KAAkC;IAC7E,OAAO,2BAA2B;AACpC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiC;IACjD,QAAQ;QAAC,QAAQ;IAAkC;IACnD,QAAQ,CAAC;;;yKAG8J,CAAC;AAC1K;AAEA,MAAM,6BAA6B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAvBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["\nexport type Attachment = { type: 'pdf' | 'youtube' | 'code' | 'link'; url: string };\nexport type Lesson = { id: string; title: string; difficulty: 'Beginner' | 'Intermediate' | 'Advanced'; attachments: Attachment[]; content?: string; codeSnippet?: string; };\nexport type Topic = { id: string; title: string; lessons: Lesson[] };\nexport type LanguageCurriculum = { name: string; topics: Topic[] };\nexport type LanguageSummary = { \n    id: string; \n    name: string; \n    icon: string; \n    topics: number; \n    lessons: number; \n    popularity: number; \n    difficulty: 'Beginner' | 'Intermediate' | 'Advanced'; \n    description: string;\n    progress: number;\n}\n\nexport let quickQuestionsData: Record<string, string[]> = {\n    js: [\n        \"What is the difference between `let`, `const`, and `var`?\",\n        \"Explain closures in JavaScript.\",\n        \"Show an example of an async/await function.\"\n    ],\n    py: [\n        \"What are decorators in Python?\",\n        \"Explain list comprehensions with an example.\",\n        \"How does garbage collection work in Python?\"\n    ],\n    go: [\n        \"What is a goroutine?\",\n        \"Explain the difference between a slice and an array.\",\n        \"How do channels work in Go?\"\n    ],\n    java: [\n        \"What is the difference between an interface and an abstract class?\",\n        \"Explain the Java Virtual Machine (JVM).\",\n        \"Show an example of exception handling.\"\n    ],\n    csharp: [\n        \"What is the purpose of LINQ?\",\n        \"Explain the difference between `struct` and `class`.\",\n        \"Show an example of using `async` and `await` in C#.\"\n    ],\n    typescript: [\n        \"What are generics in TypeScript?\",\n        \"Explain the difference between an `interface` and a `type`.\",\n        \"What is a `never` type?\"\n    ],\n    cpp: [\n        \"Explain pointers vs. references in C++.\",\n        \"What is RAII (Resource Acquisition Is Initialization)?\",\n        \"Show an example of a simple class with a constructor.\"\n    ],\n    rust: [\n        \"What is the borrow checker?\",\n        \"Explain ownership in Rust.\",\n        \"Show an example of using the `match` control flow operator.\"\n    ]\n};\n\nconst createCurriculum = (name: string, topicsList: string[]): LanguageCurriculum => {\n    const langId = name.toLowerCase().replace(/#/g, 'sharp').replace(/\\+/g, 'plus');\n    return {\n        name: name,\n        topics: topicsList.map((topicTitle, i) => ({\n            id: `t-${langId}-${i}`,\n            title: topicTitle,\n            lessons: [\n                { id: `l-${langId}-${i}-1`, title: `Introduction to ${topicTitle}`, difficulty: 'Beginner', attachments: [], content: `Content for Introduction to ${topicTitle} is coming soon.`, codeSnippet: `console.log(\"Welcome to ${topicTitle}!\");` },\n                { id: `l-${langId}-${i}-2`, title: `Core Concepts of ${topicTitle}`, difficulty: 'Intermediate', attachments: [], content: `Content for Core Concepts of ${topicTitle} is coming soon.`},\n                { id: `l-${langId}-${i}-3`, title: `Advanced ${topicTitle}`, difficulty: 'Advanced', attachments: [], content: `Content for Advanced ${topicTitle} is coming soon.`},\n            ]\n        }))\n    }\n}\n\nexport const languagesCurriculumData: Record<string, LanguageCurriculum> = {\n  py: createCurriculum('Python', ['Introduction', 'Basics', 'Control Flow', 'Functions', 'Data Structures', 'OOP', 'File I/O', 'Exception Handling']),\n  js: createCurriculum('JavaScript', ['Introduction', 'Fundamentals', 'Functions', 'DOM Manipulation', 'Async JS', 'ES6+ Features']),\n  java: createCurriculum('Java', ['Introduction', 'Core Concepts', 'OOP', 'Collections Framework', 'Exception Handling']),\n  cpp: createCurriculum('C++', ['Basics', 'Variables & Types', 'OOP in C++', 'Standard Template Library (STL)']),\n  go: createCurriculum('Go', ['Getting Started', 'Fundamentals', 'Concurrency', 'Packages & Testing']),\n  csharp: createCurriculum('C#', ['Introduction to .NET', 'Variables & Data Types', 'Control Flow', 'Classes & Objects (OOP)', 'LINQ']),\n  typescript: createCurriculum('TypeScript', ['Intro to TypeScript', 'Basic Types', 'Interfaces & Classes', 'Generics', 'Modules']),\n  swift: createCurriculum('Swift', ['Swift Basics', 'Control Flow', 'Data Structures', 'Classes & Structs', 'Protocol-Oriented Programming']),\n  kotlin: createCurriculum('Kotlin', ['Kotlin Basics', 'Control Flow', 'Functions & Lambdas', 'Kotlin for Android', 'Coroutines']),\n  php: createCurriculum('PHP', ['PHP Syntax', 'Variables & Types', 'Control Structures', 'Functions', 'Working with Forms']),\n  ruby: createCurriculum('Ruby', ['Ruby Basics', 'Control Structures', 'Methods & Blocks', 'Classes & Objects', 'Ruby on Rails Intro']),\n  rust: createCurriculum('Rust', ['Getting Started', 'Common Concepts', 'Ownership', 'Structs & Enums', 'Error Handling']),\n  dart: createCurriculum('Dart', ['Dart Fundamentals', 'Control Flow', 'Functions', 'Classes', 'Asynchronous Dart']),\n  scala: createCurriculum('Scala', ['Scala Basics', 'Functional Programming', 'Object-Oriented Scala', 'Case Classes & Pattern Matching', 'Collections']),\n  perl: createCurriculum('Perl', ['Perl Syntax', 'Variables', 'Control Structures', 'Subroutines', 'Regular Expressions']),\n  haskell: createCurriculum('Haskell', ['Basic Syntax', 'Types and Typeclasses', 'Functions', 'Monads', 'Input/Output']),\n  lua: createCurriculum('Lua', ['Basic Concepts', 'Control Structures', 'Functions', 'Tables', 'Metatables']),\n  r: createCurriculum('R', ['R Basics', 'Data Structures', 'Data Import/Export', 'Control Structures', 'Data Visualization with ggplot2']),\n  sql: createCurriculum('SQL', ['Basic Queries', 'Joining Tables', 'Aggregation', 'Subqueries', 'Data Modification']),\n  bash: createCurriculum('Bash', ['Shell Basics', 'Scripting Fundamentals', 'Variables & Operators', 'Control Flow', 'Functions & Command-Line Arguments']),\n};\n\nexport let languagesSummaryData: LanguageSummary[] = [\n  { id: 'py', name: 'Python', icon: 'https://placehold.co/32x32.png', topics: 8, lessons: 24, popularity: 5210, difficulty: 'Beginner', progress: 80, description: 'Versatile language for data science and web.' },\n  { id: 'js', name: 'JavaScript', icon: 'https://placehold.co/32x32.png', topics: 6, lessons: 18, popularity: 4890, difficulty: 'Beginner', progress: 65, description: 'Dynamic language for web development.' },\n  { id: 'java', name: 'Java', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 3120, difficulty: 'Intermediate', progress: 40, description: 'Robust language for enterprise applications.' },\n  { id: 'cpp', name: 'C++', icon: 'https://placehold.co/32x32.png', topics: 4, lessons: 12, popularity: 2540, difficulty: 'Advanced', progress: 25, description: 'High-performance language for systems programming.' },\n  { id: 'go', name: 'Go', icon: 'https://placehold.co/32x32.png', topics: 4, lessons: 12, popularity: 1980, difficulty: 'Intermediate', progress: 35, description: 'Modern language for concurrent programming.' },\n  { id: 'csharp', name: 'C#', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 3500, difficulty: 'Intermediate', progress: 55, description: 'Flexible language for Windows and web apps.' },\n  { id: 'typescript', name: 'TypeScript', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 4200, difficulty: 'Intermediate', progress: 70, description: 'JavaScript that scales.' },\n  { id: 'swift', name: 'Swift', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 2800, difficulty: 'Intermediate', progress: 30, description: 'Modern, safe language for Apple platforms.' },\n  { id: 'kotlin', name: 'Kotlin', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 2600, difficulty: 'Intermediate', progress: 45, description: 'The official language for Android development.' },\n  { id: 'php', name: 'PHP', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 2300, difficulty: 'Beginner', progress: 10, description: 'Popular language for server-side web development.' },\n  { id: 'ruby', name: 'Ruby', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 1800, difficulty: 'Intermediate', progress: 20, description: 'A dynamic, open source programming language.' },\n  { id: 'rust', name: 'Rust', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 1530, difficulty: 'Advanced', progress: 15, description: 'A language empowering everyone to build reliable software.' },\n  { id: 'dart', name: 'Dart', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 1200, difficulty: 'Intermediate', progress: 5, description: 'Client-optimized language for fast apps on any platform.' },\n  { id: 'scala', name: 'Scala', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 900, difficulty: 'Advanced', progress: 2, description: 'A hybrid functional/object-oriented language.' },\n  { id: 'perl', name: 'Perl', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 400, difficulty: 'Advanced', progress: 0, description: 'A highly capable, feature-rich programming language.' },\n  { id: 'haskell', name: 'Haskell', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 750, difficulty: 'Advanced', progress: 0, description: 'An advanced, purely functional programming language.' },\n  { id: 'lua', name: 'Lua', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 1100, difficulty: 'Beginner', progress: 0, description: 'A powerful, efficient, lightweight, embeddable scripting language.' },\n  { id: 'r', name: 'R', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 1400, difficulty: 'Intermediate', progress: 0, description: 'A language and environment for statistical computing.' },\n  { id: 'sql', name: 'SQL', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 4500, difficulty: 'Beginner', progress: 0, description: 'A standard language for storing and retrieving data.' },\n  { id: 'bash', name: 'Bash', icon: 'https://placehold.co/32x32.png', topics: 5, lessons: 15, popularity: 2100, difficulty: 'Intermediate', progress: 0, description: 'The GNU Project\\'s shell—the Bourne Again SHell.' },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 817, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/languageService.ts"],"sourcesContent":["\n'use server';\n\nimport { \n    languagesSummaryData, \n    languagesCurriculumData, \n    quickQuestionsData,\n    type LanguageSummary, \n    type LanguageCurriculum,\n    type Topic,\n    type Lesson\n} from \"@/lib/mock-data\";\n\n/**\n * In-memory data store for the application.\n * In a real-world application, these functions would interact with a database.\n */\n\n// ========== Language Summary Services ==========\n\nexport async function getLanguagesSummary(): Promise<LanguageSummary[]> {\n    // Simulate async database call\n    return Promise.resolve(languagesSummaryData);\n}\n\nexport async function addLanguageSummary(summary: LanguageSummary): Promise<void> {\n    languagesSummaryData.push(summary);\n    return Promise.resolve();\n}\n\nexport async function deleteLanguageSummary(langId: string): Promise<void> {\n    const index = languagesSummaryData.findIndex(l => l.id === langId);\n    if (index > -1) {\n        languagesSummaryData.splice(index, 1);\n    }\n    return Promise.resolve();\n}\n\n// ========== Language Curriculum Services ==========\n\nexport async function getLanguageCurriculum(langId: string): Promise<LanguageCurriculum | null> {\n    return Promise.resolve(languagesCurriculumData[langId] || null);\n}\n\nexport async function addLanguageCurriculum(langId: string, curriculum: LanguageCurriculum): Promise<void> {\n    languagesCurriculumData[langId] = curriculum;\n    return Promise.resolve();\n}\n\nexport async function deleteLanguageCurriculum(langId: string): Promise<void> {\n    delete languagesCurriculumData[langId];\n    return Promise.resolve();\n}\n\n// ========== Quick Question Services ==========\n\nexport async function getQuickQuestions(langId: string): Promise<string[] | undefined> {\n    return Promise.resolve(quickQuestionsData[langId]);\n}\n\nexport async function addQuickQuestions(langId: string, questions: string[]): Promise<void> {\n    quickQuestionsData[langId] = questions;\n    return Promise.resolve();\n}\n\n// ========== Topic Services (Example) ==========\n\nexport async function addTopic(langId: string, topic: Omit<Topic, 'id' | 'lessons'>): Promise<Topic | null> {\n    const curriculum = languagesCurriculumData[langId];\n    if (curriculum) {\n        const newTopic: Topic = {\n            ...topic,\n            id: `t-${Date.now()}`,\n            lessons: [],\n        };\n        curriculum.topics.push(newTopic);\n        \n        const summary = languagesSummaryData.find(s => s.id === langId);\n        if (summary) {\n            summary.topics = curriculum.topics.length;\n        }\n\n        return Promise.resolve(newTopic);\n    }\n    return Promise.resolve(null);\n}\n\n// ========== Lesson Services (Example) ==========\n\nexport async function addLesson(langId: string, topicId: string, lesson: Omit<Lesson, 'id'>): Promise<Lesson | null> {\n    const topic = languagesCurriculumData[langId]?.topics.find(t => t.id === topicId);\n    if (topic) {\n        const newLesson: Lesson = {\n            ...lesson,\n            id: `l-${Date.now()}`,\n        };\n        topic.lessons.push(newLesson);\n\n        const summary = languagesSummaryData.find(s => s.id === langId);\n        if (summary) {\n            summary.lessons = (summary.lessons || 0) + 1;\n        }\n\n        return Promise.resolve(newLesson);\n    }\n    return Promise.resolve(null);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA;;;;;AAiBO,eAAe;IAClB,+BAA+B;IAC/B,OAAO,QAAQ,OAAO,CAAC,0HAAA,CAAA,uBAAoB;AAC/C;AAEO,eAAe,mBAAmB,OAAwB;IAC7D,0HAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC;IAC1B,OAAO,QAAQ,OAAO;AAC1B;AAEO,eAAe,sBAAsB,MAAc;IACtD,MAAM,QAAQ,0HAAA,CAAA,uBAAoB,CAAC,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IAC3D,IAAI,QAAQ,CAAC,GAAG;QACZ,0HAAA,CAAA,uBAAoB,CAAC,MAAM,CAAC,OAAO;IACvC;IACA,OAAO,QAAQ,OAAO;AAC1B;AAIO,eAAe,sBAAsB,MAAc;IACtD,OAAO,QAAQ,OAAO,CAAC,0HAAA,CAAA,0BAAuB,CAAC,OAAO,IAAI;AAC9D;AAEO,eAAe,sBAAsB,MAAc,EAAE,UAA8B;IACtF,0HAAA,CAAA,0BAAuB,CAAC,OAAO,GAAG;IAClC,OAAO,QAAQ,OAAO;AAC1B;AAEO,eAAe,yBAAyB,MAAc;IACzD,OAAO,0HAAA,CAAA,0BAAuB,CAAC,OAAO;IACtC,OAAO,QAAQ,OAAO;AAC1B;AAIO,eAAe,kBAAkB,MAAc;IAClD,OAAO,QAAQ,OAAO,CAAC,0HAAA,CAAA,qBAAkB,CAAC,OAAO;AACrD;AAEO,eAAe,kBAAkB,MAAc,EAAE,SAAmB;IACvE,0HAAA,CAAA,qBAAkB,CAAC,OAAO,GAAG;IAC7B,OAAO,QAAQ,OAAO;AAC1B;AAIO,eAAe,SAAS,MAAc,EAAE,KAAoC;IAC/E,MAAM,aAAa,0HAAA,CAAA,0BAAuB,CAAC,OAAO;IAClD,IAAI,YAAY;QACZ,MAAM,WAAkB;YACpB,GAAG,KAAK;YACR,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI;YACrB,SAAS,EAAE;QACf;QACA,WAAW,MAAM,CAAC,IAAI,CAAC;QAEvB,MAAM,UAAU,0HAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACxD,IAAI,SAAS;YACT,QAAQ,MAAM,GAAG,WAAW,MAAM,CAAC,MAAM;QAC7C;QAEA,OAAO,QAAQ,OAAO,CAAC;IAC3B;IACA,OAAO,QAAQ,OAAO,CAAC;AAC3B;AAIO,eAAe,UAAU,MAAc,EAAE,OAAe,EAAE,MAA0B;IACvF,MAAM,QAAQ,0HAAA,CAAA,0BAAuB,CAAC,OAAO,EAAE,OAAO,KAAK,CAAA,IAAK,EAAE,EAAE,KAAK;IACzE,IAAI,OAAO;QACP,MAAM,YAAoB;YACtB,GAAG,MAAM;YACT,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI;QACzB;QACA,MAAM,OAAO,CAAC,IAAI,CAAC;QAEnB,MAAM,UAAU,0HAAA,CAAA,uBAAoB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACxD,IAAI,SAAS;YACT,QAAQ,OAAO,GAAG,CAAC,QAAQ,OAAO,IAAI,CAAC,IAAI;QAC/C;QAEA,OAAO,QAAQ,OAAO,CAAC;IAC3B;IACA,OAAO,QAAQ,OAAO,CAAC;AAC3B;;;IAtFsB;IAKA;IAKA;IAUA;IAIA;IAKA;IAOA;IAIA;IAOA;IAsBA;;AArEA,+OAAA;AAKA,+OAAA;AAKA,+OAAA;AAUA,+OAAA;AAIA,+OAAA;AAKA,+OAAA;AAOA,+OAAA;AAIA,+OAAA;AAOA,+OAAA;AAsBA,+OAAA","debugId":null}},
    {"offset": {"line": 931, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/languageActions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { generateLanguageTopics } from '@/ai/flows/generate-language-topics';\nimport { generateQuickQuestions } from '@/ai/flows/generate-quick-questions';\nimport { \n    addLanguageSummary, \n    addLanguageCurriculum,\n    deleteLanguageSummary,\n    deleteLanguageCurriculum,\n    addTopic,\n    addQuickQuestions,\n} from '@/services/languageService';\nimport type { LanguageSummary, LanguageCurriculum } from '@/lib/mock-data';\n\nconst languageSchema = z.object({\n    name: z.string().min(1, \"Name is required.\"),\n    icon: z.string().url(\"Must be a valid URL.\"),\n    difficulty: z.enum(['Beginner', 'Intermediate', 'Advanced']),\n    topicCount: z.coerce.number().min(3).max(10),\n    quickQuestionsCount: z.coerce.number().min(3).max(5),\n});\n\nexport async function addLanguageAction(formData: FormData) {\n    const validatedFields = languageSchema.safeParse({\n        name: formData.get('name'),\n        icon: formData.get('icon'),\n        difficulty: formData.get('difficulty'),\n        topicCount: formData.get('topicCount'),\n        quickQuestionsCount: formData.get('quickQuestionsCount'),\n    });\n\n    if (!validatedFields.success) {\n        const fieldErrors = validatedFields.error.flatten().fieldErrors;\n        const firstError = Object.values(fieldErrors)[0]?.[0] || \"Invalid input. Please check the form.\";\n        return {\n            error: firstError,\n        };\n    }\n\n    const { name, icon, difficulty, topicCount, quickQuestionsCount } = validatedFields.data;\n    const languageId = name.toLowerCase().replace(/\\s/g, '-').replace(/[^a-z0-9-]/g, '');\n\n    try {\n        const [topicResults, quickQuestionResults] = await Promise.all([\n            generateLanguageTopics({ languageName: name, topicCount }),\n            generateQuickQuestions({ languageName: name, count: quickQuestionsCount })\n        ]);\n\n        if (!topicResults || !topicResults.topics) {\n            throw new Error(\"AI topic generation failed.\");\n        }\n\n        if (!quickQuestionResults || !quickQuestionResults.questions) {\n            throw new Error(\"AI quick question generation failed.\");\n        }\n\n        const newLanguageSummary: LanguageSummary = {\n            id: languageId,\n            name,\n            icon,\n            difficulty,\n            topics: topicResults.topics.length,\n            lessons: 0,\n            popularity: 0,\n            description: `A ${difficulty}-level programming language.`,\n            progress: 0,\n        };\n        \n        const newLanguageCurriculum: LanguageCurriculum = {\n            name: newLanguageSummary.name,\n            topics: topicResults.topics.map((t, index) => ({\n                id: `t-${languageId}-${index}`,\n                title: t.title,\n                lessons: []\n            }))\n        };\n        \n        await addLanguageSummary(newLanguageSummary);\n        await addLanguageCurriculum(languageId, newLanguageCurriculum);\n        await addQuickQuestions(languageId, quickQuestionResults.questions);\n\n        revalidatePath('/admin/languages');\n        revalidatePath('/languages');\n        revalidatePath('/dashboard');\n        revalidatePath('/ai-assistant');\n        \n        return {\n            success: true,\n            message: `${name} was added with ${topicResults.topics.length} starter topics and ${quickQuestionResults.questions.length} quick questions.`,\n        }\n\n    } catch (error) {\n        console.error(\"Failed to add language:\", error);\n        return {\n            error: \"Could not save the language. AI generation failed.\",\n        };\n    }\n}\n\nexport async function deleteLanguageAction(langId: string) {\n    if (!langId) {\n        return { error: \"Language ID is required.\" };\n    }\n\n    try {\n        await deleteLanguageSummary(langId);\n        await deleteLanguageCurriculum(langId);\n        revalidatePath('/admin/languages');\n        revalidatePath('/languages');\n        revalidatePath('/dashboard');\n        return { success: true };\n    } catch (error) {\n        console.error(\"Failed to delete language:\", error);\n        return { error: \"An unexpected error occurred.\" };\n    }\n}\n\nconst generateTopicsSchema = z.object({\n    langId: z.string(),\n    languageName: z.string(),\n    topicCount: z.coerce.number().min(1).max(10),\n});\n\nexport async function generateTopicsAction(formData: FormData) {\n    const validatedFields = generateTopicsSchema.safeParse({\n        langId: formData.get('langId'),\n        languageName: formData.get('languageName'),\n        topicCount: formData.get('topicCount'),\n    });\n\n    if (!validatedFields.success) {\n        return { error: \"Invalid input.\" };\n    }\n\n    const { langId, languageName, topicCount } = validatedFields.data;\n\n    try {\n        const aiResult = await generateLanguageTopics({ \n            languageName,\n            topicCount,\n        });\n\n        if (!aiResult || !aiResult.topics) {\n            throw new Error(\"AI topic generation failed.\");\n        }\n\n        for (const topic of aiResult.topics) {\n            await addTopic(langId, { title: topic.title });\n        }\n\n        revalidatePath(`/admin/languages/${langId}`);\n        revalidatePath('/admin/languages');\n        revalidatePath('/dashboard');\n        \n        return {\n            success: true,\n            message: `${aiResult.topics.length} topics were generated for ${languageName}.`,\n        }\n\n    } catch (error) {\n        console.error(\"Failed to generate topics:\", error);\n        return {\n            error: \"Could not generate topics for the language.\",\n        };\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;AAUA,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5B,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IACrB,YAAY,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAY;QAAgB;KAAW;IAC3D,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACzC,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACtD;AAEO,eAAe,kBAAkB,QAAkB;IACtD,MAAM,kBAAkB,eAAe,SAAS,CAAC;QAC7C,MAAM,SAAS,GAAG,CAAC;QACnB,MAAM,SAAS,GAAG,CAAC;QACnB,YAAY,SAAS,GAAG,CAAC;QACzB,YAAY,SAAS,GAAG,CAAC;QACzB,qBAAqB,SAAS,GAAG,CAAC;IACtC;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC1B,MAAM,cAAc,gBAAgB,KAAK,CAAC,OAAO,GAAG,WAAW;QAC/D,MAAM,aAAa,OAAO,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;QACzD,OAAO;YACH,OAAO;QACX;IACJ;IAEA,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,mBAAmB,EAAE,GAAG,gBAAgB,IAAI;IACxF,MAAM,aAAa,KAAK,WAAW,GAAG,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,eAAe;IAEjF,IAAI;QACA,MAAM,CAAC,cAAc,qBAAqB,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC3D,CAAA,GAAA,oJAAA,CAAA,yBAAsB,AAAD,EAAE;gBAAE,cAAc;gBAAM;YAAW;YACxD,CAAA,GAAA,oJAAA,CAAA,yBAAsB,AAAD,EAAE;gBAAE,cAAc;gBAAM,OAAO;YAAoB;SAC3E;QAED,IAAI,CAAC,gBAAgB,CAAC,aAAa,MAAM,EAAE;YACvC,MAAM,IAAI,MAAM;QACpB;QAEA,IAAI,CAAC,wBAAwB,CAAC,qBAAqB,SAAS,EAAE;YAC1D,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,qBAAsC;YACxC,IAAI;YACJ;YACA;YACA;YACA,QAAQ,aAAa,MAAM,CAAC,MAAM;YAClC,SAAS;YACT,YAAY;YACZ,aAAa,CAAC,EAAE,EAAE,WAAW,4BAA4B,CAAC;YAC1D,UAAU;QACd;QAEA,MAAM,wBAA4C;YAC9C,MAAM,mBAAmB,IAAI;YAC7B,QAAQ,aAAa,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,QAAU,CAAC;oBAC3C,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,OAAO;oBAC9B,OAAO,EAAE,KAAK;oBACd,SAAS,EAAE;gBACf,CAAC;QACL;QAEA,MAAM,CAAA,GAAA,kIAAA,CAAA,qBAAkB,AAAD,EAAE;QACzB,MAAM,CAAA,GAAA,kIAAA,CAAA,wBAAqB,AAAD,EAAE,YAAY;QACxC,MAAM,CAAA,GAAA,kIAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY,qBAAqB,SAAS;QAElE,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QAEf,OAAO;YACH,SAAS;YACT,SAAS,GAAG,KAAK,gBAAgB,EAAE,aAAa,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,qBAAqB,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC;QAChJ;IAEJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;YACH,OAAO;QACX;IACJ;AACJ;AAEO,eAAe,qBAAqB,MAAc;IACrD,IAAI,CAAC,QAAQ;QACT,OAAO;YAAE,OAAO;QAA2B;IAC/C;IAEA,IAAI;QACA,MAAM,CAAA,GAAA,kIAAA,CAAA,wBAAqB,AAAD,EAAE;QAC5B,MAAM,CAAA,GAAA,kIAAA,CAAA,2BAAwB,AAAD,EAAE;QAC/B,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,SAAS;QAAK;IAC3B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YAAE,OAAO;QAAgC;IACpD;AACJ;AAEA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM;IACtB,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAC7C;AAEO,eAAe,qBAAqB,QAAkB;IACzD,MAAM,kBAAkB,qBAAqB,SAAS,CAAC;QACnD,QAAQ,SAAS,GAAG,CAAC;QACrB,cAAc,SAAS,GAAG,CAAC;QAC3B,YAAY,SAAS,GAAG,CAAC;IAC7B;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC1B,OAAO;YAAE,OAAO;QAAiB;IACrC;IAEA,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,gBAAgB,IAAI;IAEjE,IAAI;QACA,MAAM,WAAW,MAAM,CAAA,GAAA,oJAAA,CAAA,yBAAsB,AAAD,EAAE;YAC1C;YACA;QACJ;QAEA,IAAI,CAAC,YAAY,CAAC,SAAS,MAAM,EAAE;YAC/B,MAAM,IAAI,MAAM;QACpB;QAEA,KAAK,MAAM,SAAS,SAAS,MAAM,CAAE;YACjC,MAAM,CAAA,GAAA,kIAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;gBAAE,OAAO,MAAM,KAAK;YAAC;QAChD;QAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,iBAAiB,EAAE,QAAQ;QAC3C,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QAEf,OAAO;YACH,SAAS;YACT,SAAS,GAAG,SAAS,MAAM,CAAC,MAAM,CAAC,2BAA2B,EAAE,aAAa,CAAC,CAAC;QACnF;IAEJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YACH,OAAO;QACX;IACJ;AACJ;;;IA/IsB;IA6EA;IAwBA;;AArGA,+OAAA;AA6EA,+OAAA;AAwBA,+OAAA","debugId":null}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/languages/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {addLanguageAction as '40720c285ca81c3f33336f3fa0d779b719d70936f8'} from 'ACTIONS_MODULE0'\nexport {deleteLanguageAction as '40c6f17ecb48a4ad90798d4fce13a6eb2b879199cf'} from 'ACTIONS_MODULE0'\nexport {getLanguagesSummary as '0001cd73d14dadd1754434a98d572a0a4ca7da57a9'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAEA","debugId":null}},
    {"offset": {"line": 1187, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/languages/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/languages/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/languages/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","debugId":null}},
    {"offset": {"line": 1201, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/languages/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/languages/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/languages/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","debugId":null}},
    {"offset": {"line": 1215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}