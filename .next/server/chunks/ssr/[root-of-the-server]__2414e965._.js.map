{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-tasks-for-topic.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI-powered tool to generate a learning plan for a specific topic.\n *\n * - generateTasksForTopic - A function that takes a topic and returns a list of tasks.\n * - GenerateTasksForTopicInput - The input type for the generateTasksForTopic function.\n * - GenerateTasksForTopicOutput - The return type for the generateTasksForTopic function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateTasksForTopicInputSchema = z.object({\n  topic: z.string().describe('The learning topic to generate tasks for.'),\n});\nexport type GenerateTasksForTopicInput = z.infer<typeof GenerateTasksForTopicInputSchema>;\n\nconst TaskSchema = z.object({\n    title: z.string().describe(\"A concise title for the task.\"),\n    description: z.string().describe(\"A brief, one-sentence description of the task.\"),\n    tags: z.array(z.string()).describe(\"A list of relevant tags for the task (e.g., Learning, Project, Reading).\"),\n});\n\nconst GenerateTasksForTopicOutputSchema = z.object({\n    tasks: z.array(TaskSchema).describe(\"An array of tasks for a learning plan.\"),\n});\nexport type GenerateTasksForTopicOutput = z.infer<typeof GenerateTasksForTopicOutputSchema>;\n\nexport async function generateTasksForTopic(input: GenerateTasksForTopicInput): Promise<GenerateTasksForTopicOutput> {\n  return generateTasksForTopicFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateTasksForTopicPrompt',\n  input: {schema: GenerateTasksForTopicInputSchema},\n  output: {schema: GenerateTasksForTopicOutputSchema},\n  prompt: `You are an expert curriculum designer who creates actionable learning plans.\nA user wants to learn about the following topic: \"{{topic}}\".\n\nYour task is to break this topic down into a series of 3-5 manageable tasks that could be put on a Kanban board.\nFor each task, provide a clear title, a short description, and a few relevant tags.\nThe tags should be simple, like 'Learning', 'Project', 'Reading', 'Practice', etc.\nThe tasks should be structured to guide a beginner through the topic logically.\n`,\n});\n\nconst generateTasksForTopicFlow = ai.defineFlow(\n  {\n    name: 'generateTasksForTopicFlow',\n    inputSchema: GenerateTasksForTopicInputSchema,\n    outputSchema: GenerateTasksForTopicOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAGA,MAAM,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,MAAM,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AACvC;AAEA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,OAAO,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,YAAY,QAAQ,CAAC;AACxC;AAGO,eAAe,sBAAsB,KAAiC;IAC3E,OAAO,0BAA0B;AACnC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAgC;IAChD,QAAQ;QAAC,QAAQ;IAAiC;IAClD,QAAQ,CAAC;;;;;;;AAOX,CAAC;AACD;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC7C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA3BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/tasks/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateTasksForTopic as '4073c1e5eb5e3915f21ebf984776b404d6efb30506'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tasks/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/tasks/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/tasks/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/tasks/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/tasks/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/tasks/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,oCACA","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}