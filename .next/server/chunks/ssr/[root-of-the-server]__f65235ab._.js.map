{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight md:text-2xl\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/explain-code.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A Genkit flow for explaining code snippets.\n *\n * - explainCode - A function that takes a code snippet and returns an explanation.\n * - ExplainCodeInput - The input type for the explainCode function.\n * - ExplainCodeOutput - The return type for the explainCode function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ExplainCodeInputSchema = z.object({\n  code: z.string().describe('The code snippet to be explained.'),\n});\nexport type ExplainCodeInput = z.infer<typeof ExplainCodeInputSchema>;\n\nconst ExplainCodeOutputSchema = z.object({\n  explanation: z.string().describe('A detailed explanation of the code, formatted in Markdown.'),\n});\nexport type ExplainCodeOutput = z.infer<typeof ExplainCodeOutputSchema>;\n\nexport async function explainCode(input: ExplainCodeInput): Promise<ExplainCodeOutput> {\n  return explainCodeFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'explainCodePrompt',\n  input: {schema: ExplainCodeInputSchema},\n  output: {schema: ExplainCodeOutputSchema},\n  prompt: `You are an expert programming tutor and code debugger.\nYour primary task is to analyze the provided code snippet for errors.\n\n**If you find an error:**\n1.  **Identify the Bug:** Clearly state what the error is.\n2.  **Explain the Cause:** Explain in simple terms why the error occurs.\n3.  **Provide the Fix:** Show the corrected code snippet.\n4.  **Explain the Fix:** Briefly explain why the corrected code works.\n\n**If the code is correct and contains no errors:**\n1.  **High-Level Summary:** Start with a one-sentence summary of what the code does.\n2.  **Line-by-Line Explanation:** Break down the code into logical parts and explain each one.\n3.  **Key Concepts:** Briefly explain any important programming concepts demonstrated.\n4.  **Output:** Explain what the expected output of the code will be when it's run.\n\nFormat your entire response in simple Markdown. Use code blocks for code snippets.\n\nCode to analyze:\n\\`\\`\\`\n{{{code}}}\n\\`\\`\\`\n`,\n});\n\nconst explainCodeFlow = ai.defineFlow(\n  {\n    name: 'explainCodeFlow',\n    inputSchema: ExplainCodeInputSchema,\n    outputSchema: ExplainCodeOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAsBsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/practice/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useRef, useMemo } from 'react';\nimport Image from 'next/image';\nimport ReactMarkdown from 'react-markdown';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Textarea } from '@/components/ui/textarea';\nimport { Code, Play, RefreshCw, Copy, Save, BrainCircuit, Loader2, CheckCircle, XCircle, Edit, Trash2, MoreHorizontal } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { explainCode } from '@/ai/flows/explain-code';\nimport { useLanguage } from '@/context/language-provider';\nimport { cn } from '@/lib/utils';\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from \"@/components/ui/alert-dialog\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter, DialogClose } from \"@/components/ui/dialog\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { useProgrammingLanguage, type LanguageId } from '@/context/programming-language-provider';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\n\nconst initialCode = `// Welcome to the Practice Zone!\n// Select an example from the left or write your own code.\n\nfunction greet(name) {\n  return 'Hello, ' + name + '! Welcome to the Practice Zone.';\n}\n\nconsole.log(greet(\"Learner\"));`;\n\nconst practiceTopics = [\n    {\n        title: \"JavaScript: Hello World\",\n        description: \"A simple 'Hello World' to get started.\",\n        language: \"js\",\n        code: `console.log(\"Hello, World!\");`,\n    },\n    {\n        title: \"JavaScript: Variables\",\n        description: \"Learn how to declare and use variables.\",\n        language: \"js\",\n        code: `let name = \"Alice\";\\nconst score = 95;\\n\\nconsole.log(name + \" scored \" + score + \" points.\");`,\n    },\n    {\n        title: \"JavaScript: Functions\",\n        description: \"Define and call a simple function.\",\n        language: \"js\",\n        code: `function add(a, b) {\\n  return a + b;\\n}\\n\\nconsole.log(\"The sum is:\", add(5, 3));`,\n    },\n    {\n        title: \"Python: User Input\",\n        description: \"A simple example of how to take input from a user.\",\n        language: \"py\",\n        code: `name = input(\"Enter your name: \")\\nprint(\"Hello, \" + name)`,\n    },\n    {\n        title: \"Python: List Iteration\",\n        description: \"Learn how to loop through a list of items.\",\n        language: \"py\",\n        code: `fruits = [\"apple\", \"banana\", \"cherry\"]\\nfor fruit in fruits:\\n  print(fruit)`,\n    },\n    {\n        title: \"C#: Hello World\",\n        description: \"A simple 'Hello World' in C#.\",\n        language: \"csharp\",\n        code: `using System;\\n\\nclass Program\\n{\\n    static void Main(string[] args)\\n    {\\n        Console.WriteLine(\"Hello, C#!\");\\n    }\\n}`,\n    },\n    {\n        title: \"TypeScript: Interfaces\",\n        description: \"Define a shape of an object with an interface.\",\n        language: \"typescript\",\n        code: `interface User {\\n  name: string;\\n  id: number;\\n}\\n\\nconst user: User = {\\n  name: \"Jane Doe\",\\n  id: 1,\\n};\\n\\nconsole.log(user.name);`,\n    },\n    {\n        title: \"Go: Goroutines\",\n        description: \"A simple example of concurrency using Goroutines.\",\n        language: \"go\",\n        code: `package main\\n\\nimport (\\n    \"fmt\"\\n    \"time\"\\n)\\n\\nfunc say(s string) {\\n    for i := 0; i < 3; i++ {\\n        time.Sleep(100 * time.Millisecond)\\n        fmt.Println(s)\\n    }\\n}\\n\\nfunc main() {\\n    go say(\"world\")\\n    say(\"hello\")\\n}`,\n    },\n    {\n        title: \"Ruby: Iterators\",\n        description: \"A simple each iterator in Ruby.\",\n        language: \"ruby\",\n        code: `(1..5).each do |i|\\n  puts \"Iteration number #{i}\"\\nend`,\n    },\n    {\n        title: \"Rust: Ownership\",\n        description: \"A basic example demonstrating ownership.\",\n        language: \"rust\",\n        code: `fn main() {\\n    let s1 = String::from(\"hello\");\\n    let s2 = s1;\\n\\n    // The next line would cause a compile error because s1's ownership was moved to s2.\\n    // println!(\"{}, world!\", s1);\\n    println!(\"{}, world!\", s2);\\n}`,\n    },\n    {\n        title: \"Swift: Optionals\",\n        description: \"Understanding optional values in Swift.\",\n        language: \"swift\",\n        code: `var optionalString: String? = \"Hello\"\\nprint(optionalString == nil) // false\\n\\nvar greeting = \"Hello!\"\\nif let name = optionalString {\\n    greeting = \"Hello, \\\\(name)\"\\n}\\nprint(greeting)`,\n    },\n    {\n        title: \"Kotlin: Null Safety\",\n        description: \"Kotlin's approach to null safety.\",\n        language: \"kotlin\",\n        code: `fun main() {\\n    var a: String = \"abc\"\\n    // a = null // Compilation error\\n\\n    var b: String? = \"def\"\\n    b = null // ok\\n    println(b)\\n}`,\n    },\n    {\n        title: \"SQL: Basic Select\",\n        description: \"A basic SELECT statement to query data from a table.\",\n        language: \"sql\",\n        code: `SELECT name, email FROM users WHERE country = 'USA';`,\n    },\n];\n\ntype SavedSnippet = {\n    id: string;\n    title: string;\n    description: string;\n    code: string;\n    language: string;\n};\n\nexport default function PracticePage() {\n    const { toast } = useToast();\n    const { t } = useLanguage();\n    const { selectedLanguage, setSelectedLanguage } = useProgrammingLanguage();\n    \n    const [code, setCode] = useState(initialCode);\n    const [output, setOutput] = useState(\"\");\n    const [error, setError] = useState<{ message: string, lineNumber: number | null } | null>(null);\n    const [explanation, setExplanation] = useState(\"\");\n    const [isRunning, setIsRunning] = useState(false);\n    const [isExplaining, setIsExplaining] = useState(false);\n    const [activeTab, setActiveTab] = useState(\"editor\");\n    const [currentTopic, setCurrentTopic] = useState({\n        title: \"Interactive Code Editor\",\n        description: \"Select an example from the left or write your own code.\"\n    });\n    const workerRef = useRef<Worker | null>(null);\n\n    const [savedSnippets, setSavedSnippets] = useState<SavedSnippet[]>([]);\n    const [snippetToDelete, setSnippetToDelete] = useState<SavedSnippet | null>(null);\n    const [editingSnippetId, setEditingSnippetId] = useState<string | null>(null);\n    \n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n    const [snippetToEdit, setSnippetToEdit] = useState<SavedSnippet | null>(null);\n    const [editedTitle, setEditedTitle] = useState(\"\");\n    const [editedDescription, setEditedDescription] = useState(\"\");\n\n    const filteredTopics = useMemo(() => {\n        if (selectedLanguage === 'all') {\n            return practiceTopics;\n        }\n        return practiceTopics.filter(topic => topic.language === selectedLanguage);\n    }, [selectedLanguage]);\n\n    const parseLineNumber = (stack: string): number | null => {\n        const match = /<anonymous>:(\\d+):/.exec(stack);\n        if (match && match[1]) {\n            return parseInt(match[1], 10);\n        }\n        return null;\n    }\n\n    useEffect(() => {\n        workerRef.current = new Worker('/code-runner.js');\n\n        workerRef.current.onmessage = (e) => {\n            const { output: workerOutput, error: workerError } = e.data;\n            if (workerError) {\n                const lineNumber = parseLineNumber(workerError.stack);\n                setOutput('Error: ' + workerError.message);\n                setError({ message: workerError.message, lineNumber });\n            } else {\n                setOutput(workerOutput || \"Code executed successfully with no output.\");\n                setError(null);\n            }\n            setIsRunning(false);\n        };\n        \n        workerRef.current.onerror = (e) => {\n            setOutput('An error occurred in the code runner: ' + e.message);\n            setIsRunning(false);\n        };\n\n        return () => {\n            workerRef.current?.terminate();\n        };\n    }, []);\n    \n    const handleLoadExample = (example: typeof practiceTopics[0]) => {\n        setCode(example.code);\n        setSelectedLanguage(example.language as LanguageId);\n        setCurrentTopic({ title: example.title, description: example.description });\n        setOutput(\"\");\n        setError(null);\n        setExplanation(\"\");\n        setActiveTab(\"editor\");\n        setEditingSnippetId(null);\n        toast({\n            title: `Loaded: ${example.title}`,\n            description: \"The example code is ready in the editor.\",\n        });\n    };\n\n    const handleRunCode = () => {\n        if (!workerRef.current) return;\n        \n        setIsRunning(true);\n        setOutput(\"Running code...\");\n        setError(null);\n        setActiveTab(\"output\");\n        workerRef.current.postMessage({ code });\n    };\n    \n    const handleCopy = () => {\n        navigator.clipboard.writeText(code);\n        toast({ title: t('code_copied_title'), description: t('code_copied_desc') });\n    };\n\n    const handleExplainCode = async () => {\n        if (!code.trim()) {\n            toast({ title: t('cannot_explain_empty_title'), description: t('cannot_explain_empty_desc'), variant: 'destructive' });\n            return;\n        }\n        setIsExplaining(true);\n        setExplanation(\"\");\n        setActiveTab(\"explanation\");\n        try {\n            const result = await explainCode({ code });\n            setExplanation(result.explanation);\n        } catch (error) {\n            console.error(error);\n            setExplanation(\"Sorry, I had trouble explaining that code. Please check the console for details.\");\n            toast({ title: t('ai_explanation_failed_title'), description: t('ai_explanation_failed_desc'), variant: 'destructive' });\n        } finally {\n            setIsExplaining(false);\n        }\n    };\n    \n    const handleReset = () => {\n        setCode(initialCode);\n        setCurrentTopic({\n            title: \"Interactive Code Editor\",\n            description: \"Select an example from the left or write your own code.\"\n        });\n        setSelectedLanguage(\"js\");\n        setOutput(\"\");\n        setError(null);\n        setExplanation(\"\");\n        setActiveTab(\"editor\");\n        setEditingSnippetId(null);\n        toast({ title: \"Editor Reset\", description: \"The editor has been reset to the default state.\" });\n    };\n\n    const handleSave = () => {\n        if (editingSnippetId) {\n            setSavedSnippets(prev => prev.map(s => \n                s.id === editingSnippetId ? { ...s, code } : s\n            ));\n            toast({\n                title: t('snippet_updated'),\n                description: t('snippet_updated_desc', { snippetTitle: currentTopic.title }),\n            });\n        } else {\n            const newSnippet: SavedSnippet = {\n                id: `snippet-${Date.now()}`,\n                title: t('untitled_snippet'),\n                description: t('saved_on_date', { date: new Date().toLocaleDateString() }),\n                code: code,\n                language: selectedLanguage,\n            };\n    \n            setSavedSnippets(prev => [newSnippet, ...prev]);\n            setEditingSnippetId(newSnippet.id);\n            setCurrentTopic({ title: newSnippet.title, description: newSnippet.description });\n            toast({\n                title: t('snippet_saved'),\n                description: t('snippet_saved_desc', { snippetTitle: newSnippet.title }),\n            });\n        }\n    };\n\n    const handleLoadSnippet = (snippet: SavedSnippet) => {\n        setCode(snippet.code);\n        setSelectedLanguage(snippet.language as LanguageId);\n        setCurrentTopic({ title: snippet.title, description: snippet.description });\n        setEditingSnippetId(snippet.id);\n        setOutput(\"\");\n        setError(null);\n        setExplanation(\"\");\n        setActiveTab(\"editor\");\n        toast({\n            title: `${t('loaded')}: ${snippet.title}`,\n            description: t('load_snippet_desc'),\n        });\n    };\n\n    const handleDeleteClick = (snippet: SavedSnippet) => {\n        setSnippetToDelete(snippet);\n    };\n\n    const handleDeleteConfirm = () => {\n        if (!snippetToDelete) return;\n        setSavedSnippets(prev => prev.filter(s => s.id !== snippetToDelete.id));\n        \n        if (editingSnippetId === snippetToDelete.id) {\n            handleReset();\n        }\n\n        toast({\n            title: t('snippet_deleted'),\n            description: t('snippet_deleted_desc', { snippetTitle: snippetToDelete.title }),\n        });\n        setSnippetToDelete(null);\n    };\n\n    const handleEditClick = (snippet: SavedSnippet) => {\n        setSnippetToEdit(snippet);\n        setEditedTitle(snippet.title);\n        setEditedDescription(snippet.description);\n        setIsEditDialogOpen(true);\n    };\n\n    const handleSaveEditedSnippet = () => {\n        if (!snippetToEdit) return;\n\n        setSavedSnippets(prev => prev.map(s => \n            s.id === snippetToEdit.id\n                ? { ...s, title: editedTitle, description: editedDescription }\n                : s\n        ));\n\n        if (editingSnippetId === snippetToEdit.id) {\n            setCurrentTopic({ title: editedTitle, description: editedDescription });\n        }\n\n        toast({ title: t('snippet_updated') });\n        setIsEditDialogOpen(false);\n        setSnippetToEdit(null);\n    };\n\n\n    return (\n        <>\n            <div className=\"flex items-center gap-4 mb-8\">\n                <Code size={40} className=\"text-primary shrink-0\" />\n                <div>\n                    <h1 className=\"font-headline text-3xl font-bold text-primary\">{t('practice_and_examples')}</h1>\n                    <p className=\"text-lg text-muted-foreground\">{t('practice_skills_interactive')}</p>\n                </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 items-start\">\n                <div className=\"lg:col-span-1 space-y-4\">\n                     <Tabs defaultValue=\"topics\" className=\"w-full\">\n                        <TabsList className=\"grid w-full grid-cols-2\">\n                           <TabsTrigger value=\"topics\">{t('practice_topics_tab')}</TabsTrigger>\n                           <TabsTrigger value=\"snippets\">{t('my_snippets')}</TabsTrigger>\n                        </TabsList>\n                        <TabsContent value=\"topics\" className=\"mt-4\">\n                           <Card>\n                                <CardHeader>\n                                    <CardTitle>{t('practice_topics_tab')}</CardTitle>\n                                    <CardDescription>Select a topic to load it into the editor.</CardDescription>\n                                </CardHeader>\n                                <CardContent className=\"flex flex-col gap-3 max-h-[60vh] overflow-y-auto\">\n                                    {filteredTopics.map((example) => (\n                                        <button\n                                            key={example.title}\n                                            onClick={() => handleLoadExample(example)}\n                                            className=\"p-3 rounded-md border text-left hover:bg-muted transition-colors focus:outline-none focus:ring-2 focus:ring-ring\"\n                                        >\n                                            <p className=\"font-semibold\">{example.title}</p>\n                                            <p className=\"text-sm text-muted-foreground\">{example.description}</p>\n                                        </button>\n                                    ))}\n                                    {filteredTopics.length === 0 && (\n                                        <p className=\"text-sm text-muted-foreground text-center py-4\">\n                                            No practice topics available for this language yet.\n                                        </p>\n                                    )}\n                                </CardContent>\n                           </Card>\n                        </TabsContent>\n                        <TabsContent value=\"snippets\" className=\"mt-4\">\n                           <Card>\n                                <CardHeader>\n                                   <CardTitle>{t('my_snippets')}</CardTitle>\n                                   <CardDescription>{t('review_saved_code')}</CardDescription>\n                                </CardHeader>\n                                <CardContent className=\"flex flex-col gap-3 max-h-[60vh] overflow-y-auto\">\n                                   {savedSnippets.length > 0 ? savedSnippets.map((snippet) => (\n                                     <div key={snippet.id} className=\"p-3 rounded-md border text-left hover:bg-muted transition-colors group\">\n                                         <div className=\"flex justify-between items-start\">\n                                            <div className=\"flex-1 pr-2 cursor-pointer\" onClick={() => handleLoadSnippet(snippet)}>\n                                                <p className=\"font-semibold\">{snippet.title}</p>\n                                                <p className=\"text-sm text-muted-foreground\">{snippet.description}</p>\n                                            </div>\n                                            <DropdownMenu>\n                                                <DropdownMenuTrigger asChild>\n                                                    <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7 flex-shrink-0\">\n                                                        <MoreHorizontal className=\"h-4 w-4\" />\n                                                    </Button>\n                                                </DropdownMenuTrigger>\n                                                <DropdownMenuContent align=\"end\">\n                                                    <DropdownMenuItem onSelect={() => handleEditClick(snippet)}><Edit className=\"mr-2 h-4 w-4\" />{t('edit_snippet_details')}</DropdownMenuItem>\n                                                    <DropdownMenuItem onSelect={() => handleDeleteClick(snippet)} className=\"text-destructive\"><Trash2 className=\"mr-2 h-4 w-4\" />{t('delete')}</DropdownMenuItem>\n                                                </DropdownMenuContent>\n                                            </DropdownMenu>\n                                         </div>\n                                     </div>\n                                   )) : (\n                                     <div className=\"text-center py-8 text-muted-foreground\">{t('no_saved_snippets')}</div>\n                                   )}\n                                </CardContent>\n                           </Card>\n                        </TabsContent>\n                    </Tabs>\n                </div>\n\n                <div className=\"lg:col-span-2\">\n                    <Card>\n                         <CardHeader>\n                            <CardTitle>{currentTopic.title}</CardTitle>\n                            <CardDescription>{currentTopic.description}</CardDescription>\n                            <div className=\"flex flex-wrap items-center justify-between gap-4 pt-4 mt-4 border-t -mx-6 px-6\">\n                                <div className=\"flex items-center gap-2\">\n                                    <Button variant=\"ghost\" size=\"sm\" onClick={handleExplainCode} disabled={isExplaining}>\n                                        <BrainCircuit /> {isExplaining ? t('ai_explaining') : t('explain_code')}\n                                    </Button>\n                                    <Button variant=\"ghost\" size=\"sm\" onClick={handleCopy}><Copy /> {t('copy_code')}</Button>\n                                    <Button variant=\"ghost\" size=\"sm\" onClick={handleReset}><RefreshCw /> {t('reset_code')}</Button>\n                                    <Button variant=\"ghost\" size=\"sm\" onClick={handleSave}><Save /> {editingSnippetId ? t('update_snippet') : t('save_snippet')}</Button>\n                                </div>\n                                <div className=\"flex items-center gap-2\">\n                                    <Button onClick={handleRunCode} disabled={isRunning} className=\"bg-green-600 hover:bg-green-700 text-white w-[90px]\">\n                                        {isRunning ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Play className=\"mr-2 h-4 w-4\" />}\n                                        {isRunning ? t('running') : t('run')}\n                                    </Button>\n                                </div>\n                            </div>\n                        </CardHeader>\n                        <CardContent>\n                            <Tabs value={activeTab} onValueChange={setActiveTab}>\n                                <TabsList className=\"grid w-full grid-cols-3\">\n                                    <TabsTrigger value=\"editor\">{t('editor')}</TabsTrigger>\n                                    <TabsTrigger value=\"output\">{t('output')}</TabsTrigger>\n                                    <TabsTrigger value=\"explanation\">{t('ai_explanation')}</TabsTrigger>\n                                </TabsList>\n                                <TabsContent value=\"editor\">\n                                    <Textarea \n                                        value={code}\n                                        onChange={(e) => setCode(e.target.value)}\n                                        className=\"font-mono h-96 bg-muted/50 dark:bg-zinc-900 rounded-md border\" \n                                        placeholder=\"Write your code here...\"\n                                    />\n                                </TabsContent>\n                                <TabsContent value=\"output\">\n                                    <div className={cn(\n                                        \"font-mono h-96 rounded-md border p-4 overflow-auto transition-colors text-sm\",\n                                        !output && \"bg-muted\",\n                                        output && error && \"bg-red-50 dark:bg-destructive/10 border-destructive/30\",\n                                        output && !error && \"bg-green-50 dark:bg-green-950/30 border-green-500/30\"\n                                    )}>\n                                        {isRunning ? (\n                                            <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n                                                <Loader2 className=\"h-6 w-6 animate-spin\" />\n                                                <p className=\"ml-3\">{t('running')}</p>\n                                            </div>\n                                        ) : error ? (\n                                            <div className=\"flex items-start gap-4 text-destructive\">\n                                                <XCircle className=\"h-5 w-5 flex-shrink-0 mt-0.5\" />\n                                                <div>\n                                                    <h3 className=\"font-bold mb-2\">Error on line {error.lineNumber || 'N/A'}</h3>\n                                                    <pre className=\"font-mono text-sm whitespace-pre-wrap\">{error.message}</pre>\n                                                </div>\n                                            </div>\n                                        ) : output ? (\n                                            <div className=\"flex items-start gap-4 text-green-700 dark:text-green-300\">\n                                                <CheckCircle className=\"h-5 w-5 flex-shrink-0 mt-0.5\" />\n                                                <div>\n                                                    <h3 className=\"font-bold mb-2\">Success!</h3>\n                                                    <pre className=\"whitespace-pre-wrap\">{output}</pre>\n                                                </div>\n                                            </div>\n                                        ) : (\n                                            <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n                                                <p>{t('run_to_see_output')}</p>\n                                            </div>\n                                        )}\n                                    </div>\n                                </TabsContent>\n                                 <TabsContent value=\"explanation\">\n                                    <div className=\"font-sans h-96 bg-muted rounded-md border p-4 overflow-auto\">\n                                        {isExplaining && (\n                                            <div className=\"flex items-center justify-center h-full\">\n                                                <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                                                <p className=\"ml-4 text-muted-foreground\">{t('ai_is_thinking')}</p>\n                                            </div>\n                                        )}\n                                        {explanation && !isExplaining && (\n                                            <ReactMarkdown className=\"prose prose-sm dark:prose-invert max-w-none\">\n                                                {explanation}\n                                            </ReactMarkdown>\n                                        )}\n                                        {!explanation && !isExplaining && (\n                                            <div className=\"flex flex-col items-center justify-center h-full text-center text-muted-foreground\">\n                                                <BrainCircuit className=\"h-12 w-12 mb-4\" />\n                                                <p>{t('click_ai_button_for_explanation')}</p>\n                                            </div>\n                                        )}\n                                    </div>\n                                </TabsContent>\n                            </Tabs>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n\n            <AlertDialog open={!!snippetToDelete} onOpenChange={(isOpen) => !isOpen && setSnippetToDelete(null)}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>{t('are_you_sure_delete_snippet')}</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            {t('delete_snippet_confirm', { snippetTitle: snippetToDelete?.title || \"\" })}\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel onClick={() => setSnippetToDelete(null)}>{t('cancel')}</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDeleteConfirm} className=\"bg-destructive hover:bg-destructive/90\">{t('delete')}</AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n            \n            <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>{t('edit_snippet_title')}</DialogTitle>\n                        <DialogDescription>{t('edit_snippet_desc')}</DialogDescription>\n                    </DialogHeader>\n                    <div className=\"grid gap-4 py-4\">\n                        <div className=\"space-y-2\">\n                            <Label htmlFor=\"edit-title\">{t('title')}</Label>\n                            <Input id=\"edit-title\" value={editedTitle} onChange={(e) => setEditedTitle(e.target.value)} />\n                        </div>\n                        <div className=\"space-y-2\">\n                            <Label htmlFor=\"edit-description\">{t('description')}</Label>\n                            <Textarea id=\"edit-description\" value={editedDescription} onChange={(e) => setEditedDescription(e.target.value)} />\n                        </div>\n                    </div>\n                    <DialogFooter>\n                        <DialogClose asChild><Button variant=\"outline\">{t('cancel')}</Button></DialogClose>\n                        <Button onClick={handleSaveEditedSnippet}>{t('save_changes')}</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}