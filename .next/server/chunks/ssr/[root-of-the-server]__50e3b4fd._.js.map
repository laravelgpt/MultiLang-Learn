{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight md:text-2xl\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/chatbot.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A Genkit flow for a contextual chatbot.\n *\n * - chatbot - A function that takes a user query and language context.\n * - ChatbotInput - The input type for the chatbot function.\n * - ChatbotOutput - The return type for the chatbot function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ChatbotInputSchema = z.object({\n  query: z.string().describe(\"The user's question.\"),\n  language: z.string().describe('The programming language context for the question.'),\n});\nexport type ChatbotInput = z.infer<typeof ChatbotInputSchema>;\n\nconst ChatbotOutputSchema = z.object({\n  response: z.string().describe(\"The AI tutor's response, formatted in Markdown.\"),\n});\nexport type ChatbotOutput = z.infer<typeof ChatbotOutputSchema>;\n\nexport async function chatbot(input: ChatbotInput): Promise<ChatbotOutput> {\n  return chatbotFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'chatbotPrompt',\n  input: {schema: ChatbotInputSchema},\n  output: {schema: ChatbotOutputSchema},\n  prompt: `You are a friendly, encouraging, and expert programming tutor.\nYour current area of focus is {{language}}.\n\nA user has asked the following question:\n\"{{{query}}}\"\n\nPlease provide a clear, helpful, and concise answer.\nIf the question is about a different topic, gently guide them back to {{language}} or answer generally if appropriate.\nFormat your response in simple Markdown. Use backticks for code elements and code blocks for examples.`,\n});\n\nconst chatbotFlow = ai.defineFlow(\n  {\n    name: 'chatbotFlow',\n    inputSchema: ChatbotInputSchema,\n    outputSchema: ChatbotOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAuBsB,UAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/languageService.ts"],"sourcesContent":["\n'use server';\n\nimport { \n    languagesSummaryData, \n    languagesCurriculumData, \n    quickQuestionsData,\n    type LanguageSummary, \n    type LanguageCurriculum,\n    type Topic,\n    type Lesson\n} from \"@/lib/mock-data\";\n\n/**\n * In-memory data store for the application.\n * In a real-world application, these functions would interact with a database.\n */\n\n// ========== Language Summary Services ==========\n\nexport async function getLanguagesSummary(): Promise<LanguageSummary[]> {\n    // Simulate async database call\n    return Promise.resolve(languagesSummaryData);\n}\n\nexport async function addLanguageSummary(summary: LanguageSummary): Promise<void> {\n    languagesSummaryData.push(summary);\n    return Promise.resolve();\n}\n\nexport async function deleteLanguageSummary(langId: string): Promise<void> {\n    const index = languagesSummaryData.findIndex(l => l.id === langId);\n    if (index > -1) {\n        languagesSummaryData.splice(index, 1);\n    }\n    return Promise.resolve();\n}\n\n// ========== Language Curriculum Services ==========\n\nexport async function getLanguageCurriculum(langId: string): Promise<LanguageCurriculum | null> {\n    return Promise.resolve(languagesCurriculumData[langId] || null);\n}\n\nexport async function addLanguageCurriculum(langId: string, curriculum: LanguageCurriculum): Promise<void> {\n    languagesCurriculumData[langId] = curriculum;\n    return Promise.resolve();\n}\n\nexport async function deleteLanguageCurriculum(langId: string): Promise<void> {\n    delete languagesCurriculumData[langId];\n    return Promise.resolve();\n}\n\n// ========== Quick Question Services ==========\n\nexport async function getQuickQuestions(langId: string): Promise<string[] | undefined> {\n    return Promise.resolve(quickQuestionsData[langId]);\n}\n\nexport async function addQuickQuestions(langId: string, questions: string[]): Promise<void> {\n    quickQuestionsData[langId] = questions;\n    return Promise.resolve();\n}\n\n// ========== Topic Services (Example) ==========\n\nexport async function addTopic(langId: string, topic: Omit<Topic, 'id' | 'lessons'>): Promise<Topic | null> {\n    const curriculum = languagesCurriculumData[langId];\n    if (curriculum) {\n        const newTopic: Topic = {\n            ...topic,\n            id: `t-${Date.now()}`,\n            lessons: [],\n        };\n        curriculum.topics.push(newTopic);\n        \n        const summary = languagesSummaryData.find(s => s.id === langId);\n        if (summary) {\n            summary.topics = curriculum.topics.length;\n        }\n\n        return Promise.resolve(newTopic);\n    }\n    return Promise.resolve(null);\n}\n\n// ========== Lesson Services (Example) ==========\n\nexport async function addLesson(langId: string, topicId: string, lesson: Omit<Lesson, 'id'>): Promise<Lesson | null> {\n    const topic = languagesCurriculumData[langId]?.topics.find(t => t.id === topicId);\n    if (topic) {\n        const newLesson: Lesson = {\n            ...lesson,\n            id: `l-${Date.now()}`,\n        };\n        topic.lessons.push(newLesson);\n\n        const summary = languagesSummaryData.find(s => s.id === langId);\n        if (summary) {\n            summary.lessons = (summary.lessons || 0) + 1;\n        }\n\n        return Promise.resolve(newLesson);\n    }\n    return Promise.resolve(null);\n}\n"],"names":[],"mappings":";;;;;;IAwDsB,oBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,2KAAA,CAAA,OAAyB;AAE7C,MAAM,qBAAqB,2KAAA,CAAA,UAA4B;AAEvD,MAAM,oBAAoB,2KAAA,CAAA,SAA2B;AAErD,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,UAA4B;QAC3B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,mBAAmB,WAAW,GAAG,2KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,2KAAA,CAAA,UAA4B;gBAC3B,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,2KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,QAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,2KAAA,CAAA,QAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,cAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,uBAAuB,WAAW,GAChC,2KAAA,CAAA,cAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,2KAAA,CAAA,SAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,2KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,2KAAA,CAAA,SAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/ai-assistant/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Bot, Send, User, Loader2, Sparkles, MessageSquarePlus, Edit, Trash2 } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useLanguage } from '@/context/language-provider';\nimport { useProgrammingLanguage } from '@/context/programming-language-provider';\nimport { chatbot } from '@/ai/flows/chatbot';\nimport { useToast } from '@/hooks/use-toast';\nimport { getQuickQuestions } from '@/services/languageService';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from \"@/components/ui/dialog\";\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from \"@/components/ui/alert-dialog\";\nimport { Label } from '@/components/ui/label';\n\ntype Message = {\n    sender: 'user' | 'ai';\n    text: string;\n};\n\ntype Conversation = {\n    id: string;\n    title: string;\n    messages: Message[];\n    timestamp: number;\n    language: string;\n};\n\nconst languageNameMap: Record<string, string> = {\n    all: 'General Programming', js: 'JavaScript', py: 'Python', go: 'Go', rust: 'Rust',\n    java: 'Java', cpp: 'C++', pascal: 'Pascal', csharp: 'C#',\n    typescript: 'TypeScript', swift: 'Swift', kotlin: 'Kotlin', php: 'PHP',\n    ruby: 'Ruby', sql: 'SQL', dart: 'Dart', r: 'R', elixir: 'Elixir',\n    haskell: 'Haskell', lua: 'Lua', perl: 'Perl', scala: 'Scala', bash: 'Bash',\n};\n\nexport default function AiAssistantPage() {\n    const { t } = useLanguage();\n    const { selectedLanguage } = useProgrammingLanguage();\n    const { toast } = useToast();\n    const scrollAreaRef = useRef<HTMLDivElement>(null);\n\n    const [history, setHistory] = useState<Conversation[]>([]);\n    const [activeChatId, setActiveChatId] = useState<string | null>(null);\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [quickQuestions, setQuickQuestions] = useState<string[]>([]);\n    \n    const [renameDialogOpen, setRenameDialogOpen] = useState(false);\n    const [deleteAlertOpen, setDeleteAlertOpen] = useState(false);\n    const [chatToEdit, setChatToEdit] = useState<Conversation | null>(null);\n    const [newChatName, setNewChatName] = useState(\"\");\n\n    // Load history from localStorage on mount\n    useEffect(() => {\n        try {\n            const savedHistory = localStorage.getItem('chatHistory');\n            if (savedHistory) {\n                const parsedHistory: Conversation[] = JSON.parse(savedHistory);\n                setHistory(parsedHistory);\n                if (parsedHistory.length > 0) {\n                    setActiveChatId(parsedHistory[0].id);\n                }\n            }\n        } catch (error) {\n            console.error(\"Failed to parse chat history from localStorage\", error);\n            localStorage.removeItem('chatHistory');\n        }\n    }, []);\n\n    // Save history to localStorage whenever it changes\n    useEffect(() => {\n        if (history.length > 0) {\n           localStorage.setItem('chatHistory', JSON.stringify(history));\n        } else {\n           localStorage.removeItem('chatHistory');\n        }\n    }, [history]);\n    \n    // Fetch quick questions when language changes\n    useEffect(() => {\n        async function fetchQuickQuestions() {\n            if (selectedLanguage === 'all') {\n                setQuickQuestions([]);\n                return;\n            }\n            const questions = await getQuickQuestions(selectedLanguage);\n            setQuickQuestions(questions || []);\n        }\n        fetchQuickQuestions();\n    }, [selectedLanguage]);\n\n    const activeChat = useMemo(() => {\n        return history.find(chat => chat.id === activeChatId) || null;\n    }, [history, activeChatId]);\n    \n    // Scroll to bottom of chat\n    useEffect(() => {\n        const viewport = scrollAreaRef.current?.querySelector('div[data-radix-scroll-area-viewport]');\n        if (viewport) {\n            viewport.scrollTo({ top: viewport.scrollHeight, behavior: 'smooth' });\n        }\n    }, [activeChat?.messages, isLoading]);\n\n    const handleNewChat = () => {\n        const languageContext = languageNameMap[selectedLanguage] || 'General Programming';\n        const newConversation: Conversation = {\n            id: `chat-${Date.now()}`,\n            title: t('ai_greeting_context', { language: languageContext }),\n            messages: [{ sender: 'ai', text: t('ai_greeting_context', { language: languageContext }) }],\n            timestamp: Date.now(),\n            language: selectedLanguage,\n        };\n        setHistory(prev => [newConversation, ...prev]);\n        setActiveChatId(newConversation.id);\n    };\n\n    const sendMessage = async (messageText: string) => {\n        if (!messageText.trim() || isLoading) return;\n\n        let currentChatId = activeChatId;\n        \n        // If there's no active chat, create a new one first\n        if (!currentChatId) {\n            const languageContext = languageNameMap[selectedLanguage] || 'General Programming';\n            const newConversation: Conversation = {\n                id: `chat-${Date.now()}`,\n                title: messageText.substring(0, 30),\n                messages: [{ sender: 'ai', text: t('ai_greeting_context', { language: languageContext }) }],\n                timestamp: Date.now(),\n                language: selectedLanguage,\n            };\n            setHistory(prev => [newConversation, ...prev]);\n            setActiveChatId(newConversation.id);\n            currentChatId = newConversation.id;\n        }\n\n        const userMessage: Message = { sender: 'user', text: messageText };\n        \n        setHistory(prev => prev.map(c => c.id === currentChatId ? { ...c, messages: [...c.messages, userMessage] } : c));\n        setInput('');\n        setIsLoading(true);\n\n        try {\n            const chat = history.find(c => c.id === currentChatId);\n            const languageContext = languageNameMap[chat?.language || selectedLanguage] || 'General Programming';\n            const result = await chatbot({ query: messageText, language: languageContext });\n            const aiResponse: Message = { sender: 'ai', text: result.response };\n            \n            setHistory(prev => prev.map(c => \n                c.id === currentChatId \n                ? { ...c, messages: [...c.messages, aiResponse], timestamp: Date.now() } \n                : c\n            ).sort((a, b) => b.timestamp - a.timestamp));\n\n        } catch (error) {\n            console.error(\"Error calling chatbot flow:\", error);\n            const errorMessage: Message = { sender: 'ai', text: \"I'm sorry, I encountered an error. Please try again.\" };\n            setHistory(prev => prev.map(c => \n                c.id === currentChatId \n                ? { ...c, messages: [...c.messages, errorMessage], timestamp: Date.now() } \n                : c\n            ).sort((a, b) => b.timestamp - a.timestamp));\n            toast({\n                title: \"An Error Occurred\",\n                description: \"Failed to get a response from the AI assistant. Please try again.\",\n                variant: \"destructive\",\n            });\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleSendMessage = (e: React.FormEvent) => {\n        e.preventDefault();\n        sendMessage(input);\n    };\n\n    const handleRename = () => {\n        if (!chatToEdit || !newChatName.trim()) return;\n        setHistory(prev => prev.map(c => c.id === chatToEdit.id ? { ...c, title: newChatName } : c));\n        setRenameDialogOpen(false);\n        setChatToEdit(null);\n        setNewChatName(\"\");\n        toast({ title: t('chat_renamed'), description: t('chat_renamed_desc') });\n    };\n\n    const handleDelete = () => {\n        if (!chatToEdit) return;\n        setHistory(prev => prev.filter(c => c.id !== chatToEdit.id));\n        if (activeChatId === chatToEdit.id) {\n            setActiveChatId(history[1] ? history[1].id : null);\n        }\n        setDeleteAlertOpen(false);\n        setChatToEdit(null);\n        toast({ title: t('chat_deleted'), description: t('chat_deleted_desc') });\n    };\n\n    return (\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 h-[calc(100vh-120px)]\">\n            {/* History Sidebar */}\n            <Card className=\"lg:col-span-1 h-full flex flex-col\">\n                <CardHeader className=\"flex-row items-center justify-between\">\n                    <CardTitle>{t('chat_history')}</CardTitle>\n                    <Button variant=\"ghost\" size=\"icon\" onClick={handleNewChat}>\n                        <MessageSquarePlus className=\"h-5 w-5\" />\n                    </Button>\n                </CardHeader>\n                <CardContent className=\"flex-1 overflow-hidden p-2\">\n                    <ScrollArea className=\"h-full\">\n                        <div className=\"space-y-2\">\n                           {history.map(chat => (\n                                <div\n                                    key={chat.id}\n                                    onClick={() => setActiveChatId(chat.id)}\n                                    className={cn(\n                                        \"p-2 rounded-md cursor-pointer group flex justify-between items-center\",\n                                        activeChatId === chat.id ? 'bg-muted' : 'hover:bg-muted/50'\n                                    )}\n                                >\n                                    <p className=\"text-sm truncate pr-2 flex-1\">{chat.title}</p>\n                                    <DropdownMenu>\n                                        <DropdownMenuTrigger asChild>\n                                             <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7 shrink-0 opacity-0 group-hover:opacity-100\">\n                                                <Edit className=\"h-4 w-4\" />\n                                            </Button>\n                                        </DropdownMenuTrigger>\n                                        <DropdownMenuContent>\n                                            <DropdownMenuItem onSelect={() => { setChatToEdit(chat); setNewChatName(chat.title); setRenameDialogOpen(true); }}>\n                                                <Edit className=\"mr-2 h-4 w-4\" />{t('rename_chat')}\n                                            </DropdownMenuItem>\n                                            <DropdownMenuItem onSelect={() => { setChatToEdit(chat); setDeleteAlertOpen(true); }} className=\"text-destructive\">\n                                                <Trash2 className=\"mr-2 h-4 w-4\" />{t('delete_chat')}\n                                            </DropdownMenuItem>\n                                        </DropdownMenuContent>\n                                    </DropdownMenu>\n                                </div>\n                            ))}\n                        </div>\n                    </ScrollArea>\n                </CardContent>\n            </Card>\n\n            {/* Chat Window */}\n            <div className=\"lg:col-span-3 h-full flex flex-col\">\n                {activeChat ? (\n                    <Card className=\"flex-1 flex flex-col\">\n                        <CardHeader>\n                            <CardTitle className=\"truncate\">{activeChat.title}</CardTitle>\n                            <CardDescription>\n                                {t('language')}: {languageNameMap[activeChat.language] || 'General'}\n                            </CardDescription>\n                        </CardHeader>\n                        <CardContent className=\"flex-1 overflow-hidden\">\n                            <ScrollArea className=\"h-full pr-4\" ref={scrollAreaRef}>\n                                <div className=\"space-y-6\">\n                                    {activeChat.messages.map((message, index) => (\n                                        <div key={index} className={cn(\"flex items-start gap-4\", message.sender === 'user' ? 'justify-end' : 'justify-start')}>\n                                            {message.sender === 'ai' && (\n                                                <Avatar className=\"h-8 w-8 border shrink-0\">\n                                                    <AvatarFallback className=\"bg-primary text-primary-foreground\"><Bot className=\"h-5 w-5\" /></AvatarFallback>\n                                                </Avatar>\n                                            )}\n                                            <div className={cn(\n                                                \"max-w-2xl p-3 rounded-lg\",\n                                                message.sender === 'user' ? 'bg-primary text-primary-foreground' : 'bg-muted'\n                                            )}>\n                                                <ReactMarkdown className=\"prose prose-sm dark:prose-invert max-w-none prose-p:my-0 prose-headings:my-2 prose-pre:my-2 prose-pre:bg-background/50 prose-pre:p-2 prose-pre:rounded-sm\">\n                                                    {message.text}\n                                                </ReactMarkdown>\n                                            </div>\n                                            {message.sender === 'user' && (\n                                                <Avatar className=\"h-8 w-8 border shrink-0\">\n                                                    <AvatarFallback><User className=\"h-5 w-5\" /></AvatarFallback>\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    ))}\n                                    {isLoading && (\n                                        <div className=\"flex items-start gap-4 justify-start\">\n                                            <Avatar className=\"h-8 w-8 border shrink-0\">\n                                                <AvatarFallback className=\"bg-primary text-primary-foreground\"><Bot className=\"h-5 w-5\" /></AvatarFallback>\n                                            </Avatar>\n                                            <div className=\"max-w-md p-3 rounded-lg bg-muted flex items-center\">\n                                                <Loader2 className=\"h-5 w-5 animate-spin text-muted-foreground\"/>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            </ScrollArea>\n                        </CardContent>\n                        <CardFooter className=\"flex-col items-start gap-4 pt-4\">\n                            {quickQuestions.length > 0 && (\n                                <div className=\"w-full\">\n                                    <div className=\"flex items-center gap-2 mb-2\">\n                                        <Sparkles className=\"h-4 w-4 text-primary\" />\n                                        <h4 className=\"text-sm font-semibold\">{t('quick_questions')}</h4>\n                                    </div>\n                                    <div className=\"flex flex-wrap gap-2\">\n                                        {quickQuestions.map((q, i) => (\n                                            <Button key={i} variant=\"outline\" size=\"sm\" onClick={() => sendMessage(q)} disabled={isLoading}>\n                                                {q}\n                                            </Button>\n                                        ))}\n                                    </div>\n                                </div>\n                            )}\n                            <form onSubmit={handleSendMessage} className=\"flex w-full items-center space-x-2\">\n                                <Input\n                                    value={input}\n                                    onChange={(e) => setInput(e.target.value)}\n                                    placeholder={t('type_your_question')}\n                                    disabled={isLoading}\n                                />\n                                <Button type=\"submit\" disabled={isLoading} className=\"w-[90px]\">\n                                    {isLoading ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Send className=\"h-4 w-4\" />}\n                                    <span className={cn(isLoading && \"sr-only\")}>{t('send')}</span>\n                                </Button>\n                            </form>\n                        </CardFooter>\n                    </Card>\n                ) : (\n                    <Card className=\"flex-1 flex flex-col items-center justify-center text-center\">\n                        <CardContent>\n                             <Bot className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n                             <h2 className=\"text-2xl font-semibold\">{t('empty_chat_placeholder_title')}</h2>\n                             <p className=\"text-muted-foreground mt-2\">{t('empty_chat_placeholder_desc')}</p>\n                             <Button onClick={handleNewChat} className=\"mt-6\">{t('start_new_conversation')}</Button>\n                        </CardContent>\n                    </Card>\n                )}\n            </div>\n            \n            <Dialog open={renameDialogOpen} onOpenChange={setRenameDialogOpen}>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>{t('rename_chat')}</DialogTitle>\n                        <DialogDescription>{t('rename_chat_desc')}</DialogDescription>\n                    </DialogHeader>\n                    <div className=\"grid gap-4 py-4\">\n                        <Label htmlFor=\"chat-name\">{t('title')}</Label>\n                        <Input id=\"chat-name\" value={newChatName} onChange={(e) => setNewChatName(e.target.value)} />\n                    </div>\n                    <DialogFooter>\n                        <Button variant=\"outline\" onClick={() => setRenameDialogOpen(false)}>{t('cancel')}</Button>\n                        <Button onClick={handleRename}>{t('save')}</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n\n            <AlertDialog open={deleteAlertOpen} onOpenChange={setDeleteAlertOpen}>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>{t('are_you_sure')}</AlertDialogTitle>\n                        <AlertDialogDescription>\n                           {t('delete_chat_confirm', { chatTitle: chatToEdit?.title || '' })}\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel onClick={() => setDeleteAlertOpen(false)}>{t('cancel')}</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleDelete} className=\"bg-destructive hover:bg-destructive/90\">\n                           {t('delete')}\n                        </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}