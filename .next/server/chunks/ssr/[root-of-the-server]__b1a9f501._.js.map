{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/chatbot.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A Genkit flow for a contextual chatbot.\n *\n * - chatbot - A function that takes a user query and language context.\n * - ChatbotInput - The input type for the chatbot function.\n * - ChatbotOutput - The return type for the chatbot function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ChatbotInputSchema = z.object({\n  query: z.string().describe(\"The user's question.\"),\n  language: z.string().describe('The programming language context for the question.'),\n});\nexport type ChatbotInput = z.infer<typeof ChatbotInputSchema>;\n\nconst ChatbotOutputSchema = z.object({\n  response: z.string().describe(\"The AI tutor's response, formatted in Markdown.\"),\n});\nexport type ChatbotOutput = z.infer<typeof ChatbotOutputSchema>;\n\nexport async function chatbot(input: ChatbotInput): Promise<ChatbotOutput> {\n  return chatbotFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'chatbotPrompt',\n  input: {schema: ChatbotInputSchema},\n  output: {schema: ChatbotOutputSchema},\n  prompt: `You are a friendly, encouraging, and expert programming tutor.\nYour current area of focus is {{language}}.\n\nA user has asked the following question:\n\"{{{query}}}\"\n\nPlease provide a clear, helpful, and concise answer.\nIf the question is about a different topic, gently guide them back to {{language}} or answer generally if appropriate.\nFormat your response in simple Markdown. Use backticks for code elements and code blocks for examples.`,\n});\n\nconst chatbotFlow = ai.defineFlow(\n  {\n    name: 'chatbotFlow',\n    inputSchema: ChatbotInputSchema,\n    outputSchema: ChatbotOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,sBAAsB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGO,eAAe,QAAQ,KAAmB;IAC/C,OAAO,YAAY;AACrB;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAkB;IAClC,QAAQ;QAAC,QAAQ;IAAmB;IACpC,QAAQ,CAAC;;;;;;;;sGAQ2F,CAAC;AACvG;AAEA,MAAM,cAAc,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC/B;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA5BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/ai-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {chatbot as '405c7426e6a61756380e156da312b030969c3a3e80'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/ai-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ai-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ai-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/ai-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ai-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ai-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}