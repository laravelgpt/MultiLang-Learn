{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-language-topics.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI-powered tool to generate starter topics for a new programming language.\n *\n * - generateLanguageTopics - A function that takes a language name and returns a list of topics.\n * - GenerateLanguageTopicsInput - The input type for the generateLanguageTopics function.\n * - GenerateLanguageTopicsOutput - The return type for the generateLanguageTopics function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateLanguageTopicsInputSchema = z.object({\n  languageName: z.string().describe('The name of the programming language.'),\n  topicCount: z.number().optional().describe('The number of topics to generate.'),\n});\nexport type GenerateLanguageTopicsInput = z.infer<typeof GenerateLanguageTopicsInputSchema>;\n\nconst TopicSchema = z.object({\n    title: z.string().describe(\"The title of the topic.\"),\n});\n\nconst GenerateLanguageTopicsOutputSchema = z.object({\n    topics: z.array(TopicSchema).describe(\"An array of introductory topic titles for the language.\"),\n});\nexport type GenerateLanguageTopicsOutput = z.infer<typeof GenerateLanguageTopicsOutputSchema>;\n\nexport async function generateLanguageTopics(input: GenerateLanguageTopicsInput): Promise<GenerateLanguageTopicsOutput> {\n  return generateLanguageTopicsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateLanguageTopicsPrompt',\n  input: {schema: GenerateLanguageTopicsInputSchema},\n  output: {schema: GenerateLanguageTopicsOutputSchema},\n  prompt: `You are an expert curriculum designer for software engineering.\nA user wants to add a new programming language to the platform: \"{{languageName}}\".\n\nYour task is to generate a list of {{#if topicCount}}{{topicCount}}{{else}}5 to 7{{/if}} essential, introductory topic titles for a beginner's curriculum in this language.\nFocus on fundamental concepts that a new learner would need to get started.\n\nFor example, for Python, you might suggest:\n- Introduction to Python\n- Python Basics (Variables, Data Types)\n- Control Flow (If/Else, Loops)\n- Functions and Modules\n- Data Structures (Lists, Dictionaries)\n\nGenerate the topics for \"{{languageName}}\".\n`,\n});\n\nconst generateLanguageTopicsFlow = ai.defineFlow(\n  {\n    name: 'generateLanguageTopicsFlow',\n    inputSchema: GenerateLanguageTopicsInputSchema,\n    outputSchema: GenerateLanguageTopicsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC7C;AAGA,MAAM,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAEA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,QAAQ,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,aAAa,QAAQ,CAAC;AAC1C;AAGO,eAAe,uBAAuB,KAAkC;IAC7E,OAAO,2BAA2B;AACpC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiC;IACjD,QAAQ;QAAC,QAAQ;IAAkC;IACnD,QAAQ,CAAC;;;;;;;;;;;;;;AAcX,CAAC;AACD;AAEA,MAAM,6BAA6B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAlCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/languages/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateLanguageTopics as '40ff51199b55f7274e0f67b5517981988d9a33843a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/languages/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/languages/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/languages/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/languages/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/languages/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/languages/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}