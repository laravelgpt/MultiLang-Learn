{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight md:text-2xl\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,qKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 705, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ArrowRight, BookOpen, Bot, CheckCircle, Code, Settings, Target, TrendingUp, Award, User, Star, Shield, BrainCircuit } from \"lucide-react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, ResponsiveContainer } from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartConfig } from \"@/components/ui/chart\"\nimport { useLanguage } from \"@/context/language-provider\";\nimport { useProgrammingLanguage, type LanguageId } from \"@/context/programming-language-provider\";\nimport { getLanguagesSummary } from \"@/services/languageService\";\nimport type { LanguageSummary } from \"@/lib/mock-data\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\n\nconst progressDataData = [\n  { month: 'Jan', points: 200 },\n  { month: 'Feb', points: 350 },\n  { month: 'Mar', points: 300 },\n  { month: 'Apr', points: 450 },\n  { month: 'May', points: 500 },\n  { month: 'Jun', points: 650 },\n];\n\nconst chartConfig: ChartConfig = {\n  points: {\n    label: \"Points\",\n    color: \"hsl(var(--chart-1))\",\n  },\n}\n\nconst awardsData = [\n  { title: \"First Step\", description: \"Complete your first lesson\", icon: Star, date: \"July 20, 2024\" },\n  { title: \"Code Ninja\", description: \"Solve 10 challenges\", icon: Code, date: \"July 22, 2024\" },\n  { title: \"Weekly Warrior\", description: \"Learn for 7 days in a row\", icon: Shield, date: \"July 27, 2024\" },\n  { title: \"Python Pioneer\", description: \"Complete 50% of the Python course\", icon: Award, date: \"July 28, 2024\" },\n  { title: \"AI Explorer\", description: \"Chat with the AI assistant for the first time\", icon: BrainCircuit, date: \"July 29, 2024\" },\n];\n\n// Mock data for language-specific dashboards\nconst languageSpecificData: Record<string, any> = {\n    js: { name: \"JavaScript\", topicsCompleted: 15, challengesSolved: 5, progress: 65, chartData: [ { month: 'Apr', points: 50 }, { month: 'May', points: 120 }, { month: 'Jun', points: 200 } ] },\n    py: { name: \"Python\", topicsCompleted: 20, challengesSolved: 8, progress: 80, chartData: [ { month: 'Jan', points: 100 }, { month: 'Feb', points: 150 }, { month: 'Mar', points: 250 } ] },\n    go: { name: \"Go\", topicsCompleted: 5, challengesSolved: 1, progress: 25, chartData: [ { month: 'May', points: 30 }, { month: 'Jun', points: 60 } ] },\n    rust: { name: \"Rust\", topicsCompleted: 2, challengesSolved: 0, progress: 10, chartData: [ { month: 'Jun', points: 20 } ] },\n};\n\nexport default function UserDashboardPage() {\n  const { t } = useLanguage();\n  const { selectedLanguage } = useProgrammingLanguage();\n  const [programmingLanguages, setProgrammingLanguages] = useState<LanguageSummary[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [progressData, setProgressData] = useState(progressDataData);\n  const [awards, setAwards] = useState(awardsData);\n\n  useEffect(() => {\n    async function fetchLanguages() {\n        setIsLoading(true);\n        const summary = await getLanguagesSummary();\n        setProgrammingLanguages(summary.slice(0, 6)); \n        setIsLoading(false);\n    }\n    fetchLanguages();\n  }, []);\n\n  const statCards = [\n    { title: t('topics_completed'), value: \"25\", change: t('from_last_week', {change: 2}), icon: BookOpen, iconBg: \"bg-blue-100 dark:bg-blue-900/50\", iconColor: \"text-blue-500 dark:text-blue-400\" },\n    { title: t('challenges_solved'), value: \"12\", change: t('from_last_week', {change: 5}), icon: CheckCircle, iconBg: \"bg-green-100 dark:bg-green-900/50\", iconColor: \"text-green-500 dark:text-green-400\" },\n    { title: t('projects_created'), value: \"3\", change: t('from_last_week', {change: 1}), icon: Code, iconBg: \"bg-purple-100 dark:bg-purple-900/50\", iconColor: \"text-purple-500 dark:text-purple-400\" },\n    { title: t('current_streak'), value: \"14\", change: t('day_streak_card'), icon: TrendingUp, iconBg: \"bg-orange-100 dark:bg-orange-900/50\", iconColor: \"text-orange-500 dark:text-orange-400\" },\n  ];\n\n  const quickActions = [\n      { title: t('continue_learning'), icon: BookOpen, href: \"/languages\" },\n      { title: t('daily_challenge'), icon: Target, href: \"/challenges\" },\n      { title: t('ai_assistant'), icon: Bot, href: \"/ai-assistant\" },\n  ];\n\n  if (selectedLanguage !== 'all' && languageSpecificData[selectedLanguage]) {\n    const langData = languageSpecificData[selectedLanguage];\n    \n    return (\n        <div className=\"flex flex-col gap-8\">\n            <h1 className=\"text-3xl font-bold font-headline text-primary\">\n                {t('dashboard_for_language', { language: langData.name })}\n            </h1>\n            <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-4\">\n                 <Card>\n                    <CardHeader>\n                        <div className=\"flex items-start justify-between\">\n                            <div className=\"flex-1\">\n                                <CardTitle className=\"text-base font-medium text-muted-foreground\">{t('language_topics_completed', { language: langData.name })}</CardTitle>\n                                <p className=\"text-3xl font-bold font-headline mt-2\">{langData.topicsCompleted}</p>\n                            </div>\n                            <BookOpen className=\"h-6 w-6 text-blue-500\" />\n                        </div>\n                    </CardHeader>\n                </Card>\n                <Card>\n                    <CardHeader>\n                        <div className=\"flex items-start justify-between\">\n                            <div className=\"flex-1\">\n                                <CardTitle className=\"text-base font-medium text-muted-foreground\">{t('language_challenges_solved', { language: langData.name })}</CardTitle>\n                                <p className=\"text-3xl font-bold font-headline mt-2\">{langData.challengesSolved}</p>\n                            </div>\n                            <CheckCircle className=\"h-6 w-6 text-green-500\" />\n                        </div>\n                    </CardHeader>\n                </Card>\n            </div>\n            <div className=\"grid gap-8 lg:grid-cols-2\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>{t('language_progress', { language: langData.name })}</CardTitle>\n                        <CardDescription>{t('track_progress')}</CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                        <div className=\"flex justify-between items-center text-sm text-muted-foreground\">\n                            <span>{t('progress_bar')}</span>\n                            <span>{langData.progress}%</span>\n                        </div>\n                        <Progress value={langData.progress} />\n                         <Button asChild className=\"w-full mt-4\">\n                            <Link href={`/languages/${selectedLanguage}`}>\n                                {t('continue_learning_language', { language: langData.name })} <ArrowRight className=\"ml-2 h-4 w-4\" />\n                            </Link>\n                        </Button>\n                    </CardContent>\n                </Card>\n                 <Card>\n                    <CardHeader>\n                        <CardTitle>{t('your_progress')}</CardTitle>\n                        <CardDescription>{t('track_progress')}</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ChartContainer config={chartConfig} className=\"min-h-[200px] w-full\">\n                            <LineChart data={langData.chartData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\n                                <CartesianGrid vertical={false} />\n                                <XAxis dataKey=\"month\" tickLine={false} axisLine={false} tickMargin={8} />\n                                <YAxis tickLine={false} axisLine={false} tickMargin={8} />\n                                <RechartsTooltip content={<ChartTooltipContent />} />\n                                <Line type=\"monotone\" dataKey=\"points\" stroke=\"var(--color-points)\" strokeWidth={2} dot={false} />\n                            </LineChart>\n                        </ChartContainer>\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n    )\n  }\n\n  return (\n    <div className=\"flex flex-col gap-8\">\n      {/* Welcome Banner */}\n      <Card className=\"bg-gradient-to-br from-primary to-accent text-primary-foreground shadow-lg border-0\">\n        <CardContent className=\"p-6 flex items-center justify-between\">\n            <div className=\"flex items-center gap-6\">\n                <Avatar className=\"h-20 w-20 border-4 border-primary-foreground/50\">\n                    <AvatarImage src=\"https://placehold.co/80x80.png\" alt=\"Git Frp\" data-ai-hint=\"profile avatar\" />\n                    <AvatarFallback className=\"text-3xl bg-primary-foreground text-primary\">GF</AvatarFallback>\n                </Avatar>\n                <div>\n                    <h1 className=\"text-3xl font-bold font-headline\">{t('welcome_back')}</h1>\n                    <p className=\"text-lg text-primary-foreground/80 mt-1\">{t('continue_journey')}</p>\n                    <div className=\"flex items-center gap-2 mt-2\">\n                        <span className=\"px-3 py-1 text-xs font-semibold bg-primary-foreground/20 rounded-full\">{t('beginner')}</span>\n                        <span className=\"text-xs text-primary-foreground/80\">{t('member_since')}</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"text-right hidden md:block\">\n                <div className=\"flex gap-8\">\n                    <div>\n                        <p className=\"text-4xl font-bold font-headline\">14</p>\n                        <p className=\"text-sm text-primary-foreground/80\">{t('day_streak_banner')}</p>\n                    </div>\n                    <div>\n                        <p className=\"text-4xl font-bold font-headline\">2,350</p>\n                        <p className=\"text-sm text-primary-foreground/80\">{t('total_points')}</p>\n                    </div>\n                </div>\n                 <Button variant=\"secondary\" size=\"sm\" className=\"mt-4 bg-white/20 hover:bg-white/30 text-white\">\n                    <Settings className=\"mr-2 h-4 w-4\" />\n                    {t('settings')}\n                </Button>\n            </div>\n        </CardContent>\n      </Card>\n      \n      <Tabs defaultValue=\"overview\" className=\"w-full\">\n        <TabsList className=\"bg-transparent p-0 inline-flex border-b w-full mb-6\">\n          <TabsTrigger value=\"overview\" className=\"bg-transparent text-muted-foreground data-[state=active]:text-primary data-[state=active]:shadow-none rounded-none border-b-2 border-transparent data-[state=active]:border-primary\">{t('overview')}</TabsTrigger>\n          <TabsTrigger value=\"progress\" className=\"bg-transparent text-muted-foreground data-[state=active]:text-primary data-[state=active]:shadow-none rounded-none border-b-2 border-transparent data-[state=active]:border-primary\">{t('progress_tab')}</TabsTrigger>\n          <TabsTrigger value=\"awards\" className=\"bg-transparent text-muted-foreground data-[state=active]:text-primary data-[state=active]:shadow-none rounded-none border-b-2 border-transparent data-[state=active]:border-primary\">{t('awards')}</TabsTrigger>\n          <TabsTrigger value=\"settings\" className=\"bg-transparent text-muted-foreground data-[state=active]:text-primary data-[state=active]:shadow-none rounded-none border-b-2 border-transparent data-[state=active]:border-primary\">{t('settings')}</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"overview\">\n            <div className=\"grid gap-8\">\n                {/* Stats Cards */}\n                <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-4\">\n                    {statCards.map((card) => (\n                        <Card key={card.title}>\n                           <CardHeader>\n                                <div className=\"flex items-start justify-between\">\n                                    <div className=\"flex-1\">\n                                        <CardTitle className=\"text-base font-medium text-muted-foreground\">{card.title}</CardTitle>\n                                        <p className=\"text-3xl font-bold font-headline mt-2\">{card.value}</p>\n                                    </div>\n                                    <div className={`p-2 rounded-full ${card.iconBg}`}>\n                                        <card.icon className={`h-6 w-6 ${card.iconColor}`} />\n                                    </div>\n                                </div>\n                            </CardHeader>\n                            <CardContent>\n                                <p className=\"text-xs text-muted-foreground\">{card.change}</p>\n                            </CardContent>\n                        </Card>\n                    ))}\n                </div>\n\n                {/* Quick Actions */}\n                <div>\n                    <h2 className=\"text-2xl font-bold font-headline mb-1\">{t('quick_actions')}</h2>\n                    <p className=\"text-muted-foreground mb-4\">{t('jump_back')}</p>\n                    <div className=\"grid gap-6 sm:grid-cols-3\">\n                        {quickActions.map((action) => (\n                             <Card key={action.title} className=\"hover:border-primary hover:shadow-lg transition-all cursor-pointer\">\n                                <Link href={action.href} className=\"block h-full\">\n                                    <CardContent className=\"p-6 flex flex-col items-center justify-center gap-4 text-center h-full\">\n                                        <div className=\"p-4 bg-primary/10 rounded-full\">\n                                            <action.icon className=\"w-8 h-8 text-primary\" />\n                                        </div>\n                                        <p className=\"font-semibold text-lg\">{action.title}</p>\n                                    </CardContent>\n                                </Link>\n                            </Card>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Your Programming Languages */}\n                 <div>\n                    <h2 className=\"text-2xl font-bold font-headline mb-1\">{t('your_languages')}</h2>\n                    <p className=\"text-muted-foreground mb-4\">{t('master_languages')}</p>\n                    <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n                        {isLoading ? (\n                            Array.from({ length: 6 }).map((_, i) => (\n                                <Card key={i}>\n                                    <CardHeader className=\"flex flex-row items-center gap-4 p-6\">\n                                        <Skeleton className=\"h-12 w-12 rounded-lg\" />\n                                        <div className=\"flex-1 space-y-2\">\n                                            <Skeleton className=\"h-5 w-3/4\" />\n                                            <Skeleton className=\"h-4 w-full\" />\n                                        </div>\n                                    </CardHeader>\n                                    <CardContent className=\"px-6 pt-0 pb-6 space-y-3\">\n                                        <Skeleton className=\"h-4 w-full\" />\n                                        <Skeleton className=\"h-4 w-1/2\" />\n                                    </CardContent>\n                                    <CardFooter className=\"p-6 pt-0\">\n                                         <Skeleton className=\"h-10 w-full\" />\n                                    </CardFooter>\n                                </Card>\n                            ))\n                        ) : (\n                            programmingLanguages.map((lang) => (\n                                <Card key={lang.id} className=\"flex flex-col\">\n                                    <CardHeader>\n                                        <div className=\"flex items-center gap-4\">\n                                            <Image src={lang.icon} alt={lang.name} width={48} height={48} className=\"rounded-lg\" data-ai-hint={`${lang.name} logo`} />\n                                            <div>\n                                                <CardTitle className=\"text-xl\">{lang.name}</CardTitle>\n                                                <CardDescription>{lang.description}</CardDescription>\n                                            </div>\n                                        </div>\n                                    </CardHeader>\n                                    <CardContent className=\"flex-grow space-y-2\">\n                                         <div className=\"flex justify-between items-center text-sm text-muted-foreground\">\n                                             <span>{t('progress_bar')}</span>\n                                             <span>{lang.progress}%</span>\n                                         </div>\n                                         <Progress value={lang.progress} />\n                                    </CardContent>\n                                    <CardFooter>\n                                        <Button asChild className=\"w-full\" variant=\"outline\">\n                                            <Link href={`/languages/${lang.id}`}>\n                                                {t('start_learning')} <ArrowRight className=\"ml-2 h-4 w-4\" />\n                                            </Link>\n                                        </Button>\n                                    </CardFooter>\n                                </Card>\n                            ))\n                        )}\n                    </div>\n                </div>\n            </div>\n        </TabsContent>\n        <TabsContent value=\"progress\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>{t('your_progress')}</CardTitle>\n                    <CardDescription>{t('track_progress')}</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <ChartContainer config={chartConfig} className=\"min-h-[300px] w-full\">\n                        <LineChart data={progressData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\n                            <CartesianGrid vertical={false} />\n                            <XAxis dataKey=\"month\" tickLine={false} axisLine={false} tickMargin={8} />\n                            <YAxis tickLine={false} axisLine={false} tickMargin={8} />\n                            <RechartsTooltip content={<ChartTooltipContent />} />\n                            <Line type=\"monotone\" dataKey=\"points\" stroke=\"var(--color-points)\" strokeWidth={2} dot={false} />\n                        </LineChart>\n                    </ChartContainer>\n                </CardContent>\n            </Card>\n        </TabsContent>\n        <TabsContent value=\"awards\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>{t('your_awards')}</CardTitle>\n                    <CardDescription>{t('all_awards')}</CardDescription>\n                </CardHeader>\n                <CardContent className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {awards.map((award) => (\n                        <Card key={award.title} className=\"flex items-center p-4 gap-4\">\n                            <award.icon className=\"w-10 h-10 text-primary shrink-0\"/>\n                            <div>\n                                <h3 className=\"font-semibold\">{award.title}</h3>\n                                <p className=\"text-sm text-muted-foreground\">{award.description}</p>\n                                <p className=\"text-xs text-muted-foreground mt-1\">{award.date}</p>\n                            </div>\n                        </Card>\n                    ))}\n                </CardContent>\n            </Card>\n        </TabsContent>\n        <TabsContent value=\"settings\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>{t('profile_settings')}</CardTitle>\n                    <CardDescription>{t('manage_profile')}</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"fullName\">{t('full_name')}</Label>\n                        <Input id=\"fullName\" defaultValue=\"Git Frp\" />\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"email\">{t('email_address')}</Label>\n                        <Input id=\"email\" type=\"email\" defaultValue=\"git.frp@example.com\" />\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"password\">{t('new_password')}</Label>\n                        <Input id=\"password\" type=\"password\" placeholder={t('enter_new_password')} />\n                    </div>\n                     <div className=\"flex items-center justify-between rounded-lg border p-4\">\n                        <div>\n                            <Label htmlFor=\"notifications\">{t('email_notifications')}</Label>\n                            <p className=\"text-sm text-muted-foreground\">{t('receive_emails')}</p>\n                        </div>\n                        <Switch id=\"notifications\" defaultChecked/>\n                    </div>\n                </CardContent>\n                <CardFooter>\n                    <Button>{t('save_settings')}</Button>\n                </CardFooter>\n            </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}